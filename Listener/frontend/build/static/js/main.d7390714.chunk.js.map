{"version":3,"sources":["lib/style/palette.js","components/common/Button.js","video/backgroundVideo.mp4","pages/HomePage.js","components/auth/AuthTemplate.js","modules/loading.js","lib/createRequestSaga.js","lib/api/client.js","lib/api/auth.js","modules/auth.js","components/auth/AuthForm.js","modules/user.js","containers/auth/LoginForm.js","pages/LoginPage.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","components/common/Responsive.js","components/common/Header.js","containers/common/HeaderContainer.js","components/common/Navbar.js","components/common/SubInfo.js","components/posts/PostList.js","modules/posts.js","lib/api/posts.js","containers/posts/SearchPostContainer.js","containers/posts/PostListContainer.js","components/posts/Pagination.js","containers/posts/PaginationContainer.js","components/common/Footer.js","containers/common/FooterContainer.js","pages/PostListPage.js","components/write/Editor.js","modules/write.js","containers/write/EditorContainer.js","components/write/WriteActionButtons.js","containers/write/WriteActionButtonsContainer.js","pages/WritePage.js","img/exercise19.jpg","img/exercise18.jpg","img/exercise20.jpg","img/exercise15.jpg","components/common/MainPhoto.js","components/common/MainCard.js","components/common/MainAbout.js","components/common/Main.js","pages/MainPage.js","components/exercises/Test.js","components/common/LoadingBar.js","img/squatIcon.png","img/lungeIcon.png","img/pressIcon.png","img/treeIcon.png","components/exercises/ExerciseResult.js","components/exercises/Check.js","img/squat.gif","img/lunge.gif","img/shoulderpress.gif","img/tree.png","components/exercises/FirstExer.js","containers/exercise/First.js","modules/exercise.js","containers/exercise/ExerciseContainer.js","pages/TodayTr.js","components/chart/MyPageChart.js","components/chart/MonthExer.js","pages/MyPage.js","components/auth/ModifyAuthForm.js","containers/auth/ModifyForm.js","pages/Modify.js","modules/post.js","components/post/PostViewer.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtons.js","modules/level.js","containers/post/PostViewerContainer.js","components/common/Comment.js","components/comments/ShowComments.js","containers/comments/CommentContainer.js","pages/PostPage.js","components/exercises/Calendar.js","pages/CalendarPage.js","App.js","serviceWorker.js","modules/index.js","components/common/ScrollToTop.js","index.js"],"names":["palette","gray","cyan","blue","indigo","buttonStyle","css","props","fullWidth","StyledButton","styled","button","StyledLink","Link","Button","to","ButtonHome","VideoDiv","div","Video","video","BgColor","BtnDiv","Title","PostListPage","history","className","bottom","delay","onClick","push","loop","autoPlay","muted","playsInline","src","backgroundVideo","type","AuthTemplateBlock","WhiteBox","LinkTo","AuthTemplate","children","style","textDecoration","fontSize","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","action","payload","createRequestActionTypes","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","meta","error","client","axios","create","logout","post","authSaga","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","MODIFY","MODIFY_SUCCESS","MODIFY_FAILURE","UPDATETOTALTIME","UPDATETOTALTIME_SUCCESS","UPDATETOTALTIME_FAILURE","changeField","form","key","value","initializeForm","register","username","password","login","modify","updateTotalTime","totalTime","registerSaga","loginSaga","modifySaga","id","patch","updateTotalTimeSaga","takeLatest","initialState","passwordConfirm","auth","authError","produce","draft","AuthFormBlock","StyledInput","input","Footer","ButtonWithMarginTop","textMap","ErrorMessage","AuthForm","onChange","onSubmit","text","autoComplete","name","placeholder","logoutSaga","userSaga","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","console","log","authAPI","checkError","withRouter","useState","setError","dispatch","useDispatch","useSelector","useEffect","setItem","JSON","stringify","target","preventDefault","LoginPage","status","includes","RegisterPage","ResponsiveBlock","Responsive","rest","HeaderBlock","Wrapper","Spacer","UserInfo","LevelInfo","Ai","span","Header","onLogout","level","HeaderContainer","NavBlock","Navbar","SubInfoBlock","hasMarginTop","SubInfo","userlevel","publishedDate","color","Date","toLocaleDateString","PostListBlock","WritePostButtonWrapper","PostItemBlock","PostItem","usrlevel","title","body","_id","PostList","posts","showWriteButton","setCheck","length","fontWeight","padding","map","postsSaga","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","SEARCH_POSTS","SEARCH_POSTS_SUCCESS","SEARCH_POSTS_FAILURE","listPosts","page","searchPosts","option","content","listPostsSaga","queryString","qs","searchPostsSaga","lastPage","parseInt","headers","Cbutton","location","setValue","options","setOptions","parse","search","ignoreQueryPrefix","method","currentTarget","PaginationBlock","PageNumber","buildLink","query","Pagination","disabled","undefined","match","params","fontStyle","class","href","FooterContainer","EditorBlock","TitleInput","QuillWrapper","Editor","onChangeField","quillElement","useRef","quillInstance","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","mounted","ref","writeSaga","INITIALIZE","SET_ORIGINAL_POST","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","initialize","writePost","setOriginalPost","updatePost","writePostSaga","updatePostSaga","tags","postError","write","originalPostId","EditorContainer","useCallback","WriteActionButtonsBlock","WriteActionButtons","onCancel","onPublish","isEdit","goBack","WritePage","Wrap","Text","H","MainPhoto","cascade","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","fade","centerPadding","autoplay","autoplaySpeed","useCss","exercise2","width","height","exercise3","exercise4","exercise5","React","Component","InDiv","useStyles","makeStyles","maxWidth","margin","boxShadow","marginBottom","bullet","display","transform","pos","About","MainCard","classes","Card","CardContent","Typography","gutterBottom","variant","component","CardActions","size","startIcon","Paragraph","MainAbout","Spacer1","Tutorial","Main","main","LabelBlock","Test","brain","pose","skeleton","timer","timeover","getData","squatCount","lungeCount","shoulderCount","seconds","minutes","hours","squat","lungeL","lungeR","press","tree","ck","squatCk","lungeLCk","lungeRCk","pressCk","treeCk","poseLabel","ww","window","innerWidth","wh","innerHeight","analysis","exname","x","y","myCustomRedrawAccordingToNewPropsHandler","gotPoses","poses","i","keypoints","position","brainLoaded","classifyPose","detectPose","inputs","classify","gotResult","setTimeout","nose","score","ankleR","err","results","confidence","la","label","clearInterval","clearTimeout","document","getElementById","inputLabel","save","index","isTree","sec","setInterval","animationIn","setup","p5","canvasParentRef","createCanvas","parent","createCapture","VIDEO","hide","ml5","poseNet","neuralNetwork","outputs","task","debug","load","model","metadata","weights","draw","translate","scale","image","a","b","strokeWeight","stroke","line","fill","ellipse","windowResized","resizeCanvas","Progress","Done","LoadingBar","done","setStyle","newStyle","opacity","Ex","MtDiv","Mait","Mt","ExLabel","Pose","ScoreDiv","Score","Grade","ExerciseResult","mistakes","lender","setLender","str","squatMt","lungeLMt","lungeRMt","pressMt","treeMt","grade","fail","mtNum","paddingTop","paddingBottom","backgroundColor","squatIcon","lungeIcon","pressIcon","treeIcon","Wrapper1","Wrapper2","Loading","Check","showResults","setShowResults","trainerAngle","setTrainer","result","setResult","setLoading","userAngle","angle","calculateAngle","s","cmp","squatms","lungeLms","lungeRms","pressms","treems","fetch","then","json","exer","idx","inputX","inputY","Math","abs","atan2","PI","ExerCard","FirstExer","arrow","marginLeft","marginRight","Hello","StyledButtonPre","StyledButtonNext","Order","First","setSquatCount","setLungeCount","setShoulderCount","setTimeover","visible1","setVisible1","visible2","setVisible2","exerciseEx","setExerciseEx","setPose","styleExplain","textAlign","menuList","menu","animationInDelay","animationOut","animationOutDelay","isVisible","image1","image2","image3","image4","exerciseSaga","UNLOAD_EXERCISE","WRITE_EXERCISE","WRITE_EXERCISE_SUCCESS","WRITE_EXERCISE_FAILIRE","writeExercise","writeExerciseSaga","exercise","ButtonWrapper","StyledButton2","Ec","lunge","shoulder","ExerciseContainer","time","mtime","first","setFirst","total","msec","videoOn","visibility","tracks","querySelector","srcObject","getTracks","stop","forEach","track","t","Number","toFixed","totaltime","Background","TodayTr","overflowX","MyDiv","Level","MyPageChart","datasets","borderColor","borderWidth","weight","val","lefttime","num","floor","MonthExer","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","exercises","date","len","exerDate","slice","labels","lineTension","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","ChartDiv","InterDiv","pc","minWidth","minHeight","mobile","useStyles2","MyPage","setStr","charclasses","matches","useMediaQuery","imgKey","space","monthspace","lv","Grid","container","spacing","item","xs","float","ModifyAuthForm","alert","Modify","postSaga","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","WRITE_COMMENT","WRITE_COMMENT_SUCCESS","WRITE_COMMENT_FAILURE","UNLOAD_POST","readPost","unloadPost","writeComment","readPostSaga","writeCommentSaga","PostViewerBlock","PostHead","PostContent","PostViewer","levels","actionButtons","dangerouslySetInnerHTML","__html","Fullscreen","AskModalBlock","AskModal","visible","description","confirmText","cancelText","onConfirm","AskRemoveModal","PostActionButtonsBlock","ActionButton","PostActionButtons","onEdit","onRemove","modal","setModal","levelSaga","UNLOAD_LEVEL","FIND_LEVEL","FIND_LEVEL_SUCCESS","FIND_LEVEL_FAILIRE","findLevel","unloadLevel","findLevelSaga","levelInfo","postId","delete","ownPost","Div","Comment","comments","ShowComments","arr","setArr","CoDiv","Input","CommentValue","setCommentValue","newPost","setNew","arrSize","PostPage","MyCal","Spacer2","Calendar","plugins","dayGridPlugin","initialView","events","dayMaxEvents","moreLinkClick","contentHeight","eventDisplay","eventBackgroundColor","calender","App","HomePage","path","exact","MainPage","CalendarPage","Boolean","hostname","rootSaga","all","rootReducer","combineReducers","ScrollToTop","pathname","useLocation","scrollTo","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7390714.chunk.js","sourcesContent":["// source: https://yeun.github.io/open-color/\nconst palette = {\n    gray: [\n      '#f8f9fa',\n      '#f1f3f5',\n      '#e9ecef',\n      '#dee2e6',\n      '#ced4da',\n      '#adb5bd',\n      '#868e96',\n      '#495057',\n      '#343a40',\n      '#212529'\n    ],\n    cyan: [\n      '#e3fafc',\n      '#c5f6fa',\n      '#99e9f2',\n      '#66d9e8',\n      '#3bc9db',\n      '#22b8cf',\n      '#15aabf',\n      '#1098ad',\n      '#0c8599',\n      '#0b7285'\n    ],\n    blue: [\n      '#e7f5ff',\n      '#d0ebff',\n      '#a5d8ff',\n      '#74c0fc',\n      '#4dabf7',\n      '#339af0',\n      '#228be6',\n      '#1c7ed6',\n      '#1971c2',\n      '#1864ab'\n    ],\n    indigo: [\n      '#edf2ff',\n      '#dbe4ff',\n      '#bac8ff',\n      '#91a7ff',\n      '#748ffc',\n      '#5c7cfa',\n      '#4c6ef5',\n      '#4263eb',\n      '#3b5bdb',\n      '#364fc7'\n    ]\n  };\n  \n  export default palette;","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/style/palette';\n\nconst buttonStyle = css`\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 0.25rem 1rem;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  background: ${palette.gray[8]};\n  &:hover {\n    background: ${palette.gray[6]};\n    color: white;\n    text-decoration: none;\n  }\n  ${props =>\n    props.fullWidth &&\n    css`\n      padding-top: 0.75rem;\n      padding-bottom: 0.75rem;\n      width: 100%;\n      font-size: 1.125rem;\n    `}\n  ${props =>\n    props.cyan &&\n    css`\n      background: ${palette.cyan[5]};\n      &:hover {\n        background: ${palette.cyan[4]};\n      }\n    `}\n  ${props =>\n    props.blue &&\n    css`\n      background: ${palette.blue[6]};\n      &:hover {\n        background: ${palette.blue[5]};\n      }\n    `}  \n  &:disabled {\n    background: ${palette.gray[3]};\n    color: ${palette.gray[5]};\n    cursor: not-allowed;\n    }\n`;\n\n\nconst StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\n\nconst Button = props => {\n  return props.to ? (\n    <StyledLink {...props} blue={props.blue ? 1 : 0} />\n  ) : (\n    <StyledButton {...props} />\n  );\n};\n\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/backgroundVideo.aa81cfcc.mp4\";","import React from 'react';\nimport Button from '../components/common/Button';\nimport styled from 'styled-components';\nimport palette from '../lib/style/palette';\nimport './PostListPage.css';\nimport Fade from 'react-reveal';\nimport backgroundVideo from '../video/backgroundVideo.mp4';\n\nimport './HomePage.css'\n\nconst ButtonHome = styled(Button)`\n  font-size : 1.5rem;\n  margin : 1.5rem;\n  display : block;\n  width : 230px;\n  height : 70px;\n  background: ${palette.gray[9]};\n  &:hover {\n    background: ${palette.gray[6]};\n  }\n  @media (max-height : 800px) {\n    width : 200px;\n    height : 60px;\n  }\n`;\n\nconst VideoDiv = styled.div`\n  padding : 0;\n  width : 100vw;\n  height :100vh;\n  overflow : hidden;\n  position : absolute;\n  text-align : center;\n  background-repeat : 'no-repeat';\n  background-position: center center;\n  background-size: cover;\n`;\nconst Video = styled.video`\n  width:100%;\n  object-fit : cover;\n  @media screen and (max-aspect-ratio: 3840/2160) {\n      width : auto;\n      height : 100vh;\n  }\n`;\n\nconst BgColor = styled.div`\n  width : 100%;\n  height: 100%;\n  position : absolute;\n  z-index :1;\n  background-size : cover;\n  background-color : rgba(0, 0, 0, 0.3);\n`;\n\nconst BtnDiv = styled.div`\n  position absolute;\n  left : 80%;\n  transform:translateX(-80%);\n  bottom : 10%;\n  z-index : 2; \n  @media (max-width: 768px) {\n    left : 50%;\n    transform:translateX(-50%);\n  }\n\n`;\n\nconst Title = styled.div`\n  position : absolute;\n  color : white;\n  z-index : 3;\n  text-align : left;\n  left : 20%;\n  transform:translateX(-20%);\n  top : 10%;\n  font-family: 'Anton', sans-serif;\n  \n  h1 {\n    font-size : 7rem;\n    margin-bottom : -10px;\n  }\n  span {\n    font-size : 9rem;\n    text-shadow : 10px 10px black;\n  }\n\n  @media (max-height : 800px) {\n    h1 {\n      font-size : 4rem;\n    }\n    span {\n      font-size : 6rem;\n    }\n  }\n`;\n\nconst PostListPage = ( { history } ) => {\n    return (\n      <div className=\"App\">\n        <>\n        <Title>\n          <h1><span>M</span>y</h1>\n          <h1><span>AI</span></h1>\n          <h1><span>T</span>rainer</h1>\n        </Title>\n        <BtnDiv>\n        <Fade bottom delay = {3000}>\n          <ButtonHome fullWidth onClick ={ () =>\n            {history.push(\"/login\")}}>SignIn</ButtonHome>\n          <ButtonHome fullWidth onClick ={ () =>\n            {history.push(\"/register\")}}>SignUp</ButtonHome>\n           </Fade>\n        </BtnDiv>\n       \n        <BgColor/>\n        <VideoDiv>\n        <Video \n          loop = {true}\n          autoPlay = {true}\n          muted = {true}\n          playsInline = {true}>\n          <source src={backgroundVideo} type='video/mp4'/>\n        </Video>\n        </VideoDiv>\n      </>\n    </div> \n    );\n};\n\nexport default PostListPage;","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport { Link } from 'react-router-dom';\n\n/**\n * 회원가입 / 로그인 페이지의 레이아웃을 담당하는 컴포넌트입니다.\n */\n\nconst AuthTemplateBlock = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background: ${palette.gray[2]};\n  /* flex로 내부 내용 중앙 정렬 */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n/* 흰색 박스 */\nconst WhiteBox = styled.div`\n  .logo-area {\n    display: block;\n    padding-bottom: 2rem;\n    text-align: center;\n    font-weight: bold;\n    letter-spacing: 2px;\n  }\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\n  padding: 2rem;\n  width: 360px;\n  background: white;\n  border-radius: 2px;\n`;\nconst LinkTo = styled(Link)`\n  color: black;\n  &:hover{\n    color: ${palette.gray[6]};\n  }\n`;\n\nconst AuthTemplate = ({ children }) => {\n    return (\n      <AuthTemplateBlock>\n        <WhiteBox>\n          <div className=\"logo-area\">\n            <LinkTo to=\"/\" style={{textDecoration:'none', fontSize : '1.4rem'}} >MAIT</LinkTo>\n          </div>\n          {children}\n        </WhiteBox>\n      </AuthTemplateBlock>\n    );\n  };\n\nexport default AuthTemplate;","import { createAction, handleActions } from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\n/*\n 요청을 위한 액션 타입을 payload로 설정합니다 (예: \"sample/GET_POST\")\n*/\n\nexport const startLoading = createAction(\n  START_LOADING,\n  requestType => requestType\n);\n\nexport const finishLoading = createAction(\n  FINISH_LOADING,\n  requestType => requestType\n);\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true\n    }),\n    [FINISH_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: false\n    })\n  },\n  initialState\n);\n\nexport default loading;","import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function*(action) {\n    yield put(startLoading(type)); // 로딩 시작\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta : response\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n    }\n    yield put(finishLoading(type)); // 로딩 끝\n  };\n}","import axios from 'axios';\n\nconst client = axios.create();\n\n/*\n  글로벌 설정 예시:\n  \n  // API 주소를 다른 곳으로 사용함\n  client.defaults.baseURL = 'https://external-api-server.com/' \n  // 헤더 설정\n  client.defaults.headers.common['Authorization'] = 'Bearer a1b2c3d4';\n  // 인터셉터 설정\n  axios.intercepter.response.use(\\\n    response => {\n      // 요청 성공 시 특정 작업 수행\n      return response;\n    }, \n    error => {\n      // 요청 실패 시 특정 작업 수행\n      return Promise.reject(error);\n    }\n  })  \n*/\n\nexport default client;","import client from './client';\n// 로그인\nexport const login = ({ username, password }) =>\n  client.post('/api/auth/login', { username, password });\n\n// 회원가입\nexport const register = ({ username, password }) =>\n  client.post('/api/auth/register', { username, password });\n\n// 비밀번호 변경\nexport const modify = ({ id, username, password }) =>\n  client.patch(`/api/auth/modify/${id}`, { id, username, password });\n\n// 로그인 상태 확인\nexport const check = () => client.get('/api/auth/check');\n\n//로그아웃\nexport const logout = () => client.post('/api/auth/logout');\n\n//댓글에 레벨 표시 하려고 레벨 쿼리해오는 api \nexport const findLevel = ({ username }) => \n  client.patch('/api/auth/level', { username }); \n\nexport const exercise = ({title, username}) =>\n  client.post('/api/auth/exercises', {title, username});\n\nexport const updateTotalTime = ({ username, totalTime }) =>\n  client.patch(`/api/auth/exercises`, { username, totalTime });","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n    createRequestActionTypes\n  } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n    'auth/REGISTER'\n  );\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n    'auth/LOGIN'\n  );\n\nconst [MODIFY, MODIFY_SUCCESS, MODIFY_FAILURE] = createRequestActionTypes(\n    'auth/MODIFY'\n  );\n\n  const [UPDATETOTALTIME, UPDATETOTALTIME_SUCCESS, UPDATETOTALTIME_FAILURE] = createRequestActionTypes(\n    'auth/UPDATETOTALTIME'\n  );\n\nexport const changeField = createAction(\n    CHANGE_FIELD,\n    ({ form, key, value }) => ({\n      form, // register , login\n      key, // username, password, passwordConfirm\n      value, // 실제 바꾸려는값\n    })\n  );\n\n  export const initializeForm = createAction(INITIALIZE_FORM, form => form); // register / login\n  export const register = createAction(REGISTER, ({ username, password }) => ({\n    username,\n    password\n  }));\n  export const login = createAction(LOGIN, ({ username, password }) => ({\n    username,\n    password\n  }));\n  export const modify = createAction(MODIFY, ({ username, password }) => ({\n    username,\n    password\n  }));\n  export const updateTotalTime = createAction(UPDATETOTALTIME, ({ username, totalTime }) => ({\n    username,\n    totalTime\n  }));\n  export const updateLevel = createAction(UPDATETOTALTIME, ({ username, totalTime }) => ({\n    username,\n    totalTime\n  }));\n  \n  const registerSaga = createRequestSaga(REGISTER, authAPI.register);\n  const loginSaga = createRequestSaga(LOGIN, authAPI.login);\n  const modifySaga = createRequestSaga(MODIFY, authAPI.modify);\n  const updateTotalTimeSaga = createRequestSaga(UPDATETOTALTIME, authAPI.updateTotalTime);\n\n  export function* authSaga() {\n    yield takeLatest(REGISTER, registerSaga);\n    yield takeLatest(LOGIN, loginSaga);\n    yield takeLatest(MODIFY, modifySaga);\n    yield takeLatest(UPDATETOTALTIME, updateTotalTimeSaga);  };\n\n  const initialState = {\n    register: {\n      username: '',\n      password: '',\n      passwordConfirm: ''\n    },\n    login: {\n      username: '',\n      password: ''\n    },\n    modify: {\n      password: '',\n      passwordConfirm: ''\n    },\n    auth: null,\n    authError: null\n  };\n\n  const auth = handleActions(\n    {\n      [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\n        produce(state, draft => {\n          draft[form][key] = value; // 예: state.register.username을 바꾼다\n        }),\n      [INITIALIZE_FORM]: (state, { payload: form }) => ({\n        ...state,\n        [form]: initialState[form],\n        authError: null // 폼 전환 시 회원 인증 에러 초기화\n      }),\n      // 회원가입 성공\n      [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n        ...state,\n        authError: null,\n        auth\n      }),\n      // 회원가입 실패\n      [REGISTER_FAILURE]: (state, { payload: error }) => ({\n        ...state,\n        authError: error\n      }),\n      // 로그인 성공\n      [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\n        ...state,\n        authError: null,\n        auth\n      }),\n      // 로그인 실패\n      [LOGIN_FAILURE]: (state, { payload: error }) => ({\n        ...state,\n        authError: error\n      }),\n      //비밀번호 변경 성공\n      [MODIFY_SUCCESS]: (state) => ({\n        ...state,\n        authError: null,\n        auth : null\n      }),\n      // 비밀번호변경 실패\n      [MODIFY_FAILURE]: (state, { payload: error }) => ({\n        ...state,\n        authError: error\n      }),\n      [UPDATETOTALTIME_SUCCESS]: (state, { payload: auth }) => ({\n        ...state,\n        authError: null,\n        auth\n      }),\n      [UPDATETOTALTIME_FAILURE]: (state, { payload: error }) => ({\n        ...state,\n        authError: error\n      })\n    },\n    initialState\n  );\n\nexport default auth;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/style/palette';\nimport Button from '../common/Button';\n\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\n\nconst AuthFormBlock = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n    text-align : center;\n  }\n`;\n\n/**\n * 스타일링된 input\n */\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\n/**\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n */\nconst Footer = styled.div`\n  margin-top: 2rem;\n  text-align: right;\n  a {\n    color: ${palette.gray[6]};\n    text-decoration: underline;\n    &:hover {\n      color: ${palette.gray[9]};\n    }\n  }\n`;\nconst ButtonWithMarginTop = styled(Button)`\n  margin-top: 1rem;\n`;\n\nconst textMap = {\n    login: '로그인',\n    register: '회원가입',\n};\n\n/**\n * 에러를 보여줍니다\n */\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\n\n\nconst AuthForm = ({type, form, onChange, onSubmit, error}) => {\n    const text = textMap[type];\n  return (\n    <AuthFormBlock>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        <StyledInput\n          autoComplete=\"username\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={form.username}\n        />\n        <StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          onChange={onChange}\n          value={form.password}\n        />\n        {type === 'register' && (\n          <StyledInput\n            autoComplete=\"new-password\"\n            name=\"passwordConfirm\"\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"\n            onChange={onChange}\n            value={form.passwordConfirm}\n          />\n        )}\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <ButtonWithMarginTop fullWidth>\n            {text}\n        </ButtonWithMarginTop>\n      </form>\n      <Footer>\n      {type === 'login' ? (\n          <Link to=\"/register\">회원가입</Link>\n        ) : (\n          <Link to=\"/login\">로그인</Link>\n        )}\n      </Footer>\n    </AuthFormBlock>\n  );\n};\n\nexport default AuthForm;","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n  'user/CHECK',\n);\nconst LOGOUT = 'user/LOGOUT';\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); // localStorage 에서 user 제거하고\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout); // logout API 호출\n    localStorage.removeItem('user'); // localStorage 에서 user 제거\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n  user: null,\n  checkError: null,\n};\n\nexport default handleActions(\n  {\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\n      ...state,\n      user,\n    }),\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n      checkError: null,\n    }),\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      checkError: error,\n    }),\n    [LOGOUT]: state => ({\n      ...state,\n      user: null,\n    }),\n  },\n  initialState,\n);","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({ history }) => {\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n      form: auth.login,\n      auth: auth.auth,\n      authError: auth.authError,\n      user: user.user\n    }));\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n      const { value, name } = e.target;\n      dispatch(\n        changeField({\n          form: 'login',\n          key: name,\n          value,\n        }),\n      );\n    };\n  \n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n      e.preventDefault();\n      const {username, password} = form;\n      dispatch(login({ username, password }));\n    };\n  \n    // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n    useEffect(() => {\n      dispatch(initializeForm('login'));\n    }, [dispatch]);\n  \n    useEffect(() => {\n        if (authError) {\n          console.log('오류 발생');\n          console.log(authError);\n          setError('로그인 실패');\n          return;\n        }\n        if (auth) {\n          console.log('로그인 성공');\n          dispatch(check());\n        }\n      }, [auth, authError, dispatch]);\n    \n      useEffect(() => {\n        if (user) {\n          history.push('/main');\n          try {\n            localStorage.setItem('user', JSON.stringify(user));\n          } catch (e) {\n            console.log('localStorage is not working');\n          }\n        }\n      }, [history, user]);\n\n    return (\n      <AuthForm\n        type=\"login\"\n        form={form}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    );\n  };\n  \n  export default withRouter(LoginForm);","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport LoginForm from '../containers/auth/LoginForm';\n\nconst LoginPage = () => {\n    return (\n        <AuthTemplate>\n            <LoginForm/>\n        </AuthTemplate>    \n    )\n};\n\nexport default LoginPage;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport {withRouter} from 'react-router-dom';\n\nconst RegisterForm = ({ history }) => {\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n      form: auth.register,\n      auth: auth.auth,\n      authError: auth.authError,\n      user: user.user,\n    }));\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n      const { value, name } = e.target;\n      dispatch(\n        changeField({\n          form: 'register',\n          key: name,\n          value,\n        }),\n      );\n    };\n  \n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n      e.preventDefault();\n      const { username, password, passwordConfirm } = form;\n      if([username, password, passwordConfirm].includes('')) {\n        setError('빈 칸을 모두 입력하세요.');\n        return;\n      }\n        // 비밀번호가 일치하지 않는다면\n        if (password !== passwordConfirm) {\n        setError('비밀번호가 일치하지 않습니다.');\n        dispatch(changeField({ form: 'register', key: 'password', value: '' }));\n        dispatch(\n          changeField({ form: 'register', key: 'passwordConfirm', value: '' }),\n        );\n        return;\n      }\n      dispatch(register({ username, password }));\n      \n    };\n  \n    // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n    useEffect(() => {\n      dispatch(initializeForm('register'));\n    }, [dispatch]);\n  \n    useEffect(() => {\n        if (authError) {\n            // 계정명이 이미 존재할 때\n            if (authError.response.status === 409) {\n              setError('이미 존재하는 계정명입니다.');\n              return;\n            }\n            // 기타 이유\n            setError('회원가입 실패');\n            return;\n          }\n        if (auth) {\n            console.log(\"회원가입 성공\");\n            console.log(auth);\n            dispatch(check());\n        }\n    }, [auth, authError, dispatch]\n    );\n\n    // user 값이 잘 설정되었는지 확인\n  useEffect(() => {\n    if (user) {\n      history.push('/main');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n   \n    return (\n      <AuthForm\n        type=\"register\"\n        form={form}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error = {error}\n      />\n    );\n  };\n  \n  export default withRouter(RegisterForm);","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport RegisterForm from '../containers/auth/RegisterForm';\n\nconst RegisterPage = () => {\n    return (\n        <AuthTemplate>\n            <RegisterForm/>\n        </AuthTemplate>    \n    );\n};\n\nexport default RegisterPage;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ResponsiveBlock = styled.div`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  width: 1224px;\n  margin: 0 auto; /* 중앙 정렬 */\n  /* 브라우저 크기에 따라 가로 사이즈 변경 */\n  @media (max-width: 1024px) {\n    width: 768px;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Responsive = ({ children, ...rest }) => {\n  // style, className, onClick, onMouseMove 등의 props를 사용할 수 있도록\n  // ...rest를 사용하여 ResponsiveBlock에게 전달\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\n};\n\nexport default Responsive;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from './Responsive';\nimport Button from './Button';\nimport palette from '../../lib/style/palette';\n\nconst HeaderBlock = styled.div`\n  position: fixed;\n  width: 100%;\n  background: white;\n  z-index : 100;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.08);\n`;\n\n/**\n * Responsive 컴포넌트의 속성에 스타일을 추가해서 새로운 컴포넌트 생성\n */\nconst Wrapper = styled(Responsive)`\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n  .logo {\n    font-size: 1.125rem;\n    font-weight: 800;\n    letter-spacing: 2px;\n  }\n  .right {\n    display: flex;\n    align-items: center;\n  }\n`;\n\n/**\n * 헤더가 fixed로 되어 있기 때문에 페이지의 컨텐츠가 4rem 아래 나타나도록 해주는 컴포넌트\n */\nconst Spacer = styled.div`\n  height: 4rem;\n`;\n\nconst UserInfo = styled.div`\n  font-weight: 800;\n  margin-right: 1rem;\n`;\nconst LevelInfo = styled.div`\n  font-weight: 800;\n  margin-right: 0.5rem;\n`;\n\nconst LinkTo = styled(Link)`\n  color: black;\n  font-style: oblique;\n  &:hover{\n    color: gray;\n    text-decoration: none;\n  }\n`;\n\nconst Ai = styled.span`\n  color : ${palette.indigo[9]};\n`;\n\nconst Header = ({ user, onLogout }) => {\n  return (\n    <>\n      <HeaderBlock>\n        <Wrapper>\n          <LinkTo to=\"/main\" className=\"logo\" style={{ fontSize: '1.5em'}}>\n            M<Ai>AI</Ai>T\n          </LinkTo>\n          {user ? (\n            <div className=\"right\">\n              <LevelInfo>{user.level}</LevelInfo>\n              <UserInfo>{user.username}</UserInfo>\n              <Button to ='/' onClick={onLogout}>로그아웃</Button>\n            </div>\n          ) : (\n            <div className=\"right\">\n              <Button to=\"/login\">로그인</Button>\n            </div>\n          )}\n        </Wrapper>\n      </HeaderBlock>\n      <Spacer />\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Header from '../../components/common/Header';\nimport { logout } from '../../modules/user';\n\nconst HeaderContainer = () => {\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n  const dispatch = useDispatch();\n  const onLogout = () => {\n      dispatch(logout());\n  };\n  return (\n    <>\n    <Header user={user} onLogout={onLogout} />\n    </>\n  );\n};\n\nexport default HeaderContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Responsive from './Responsive';\nconst NavBlock = styled.div`\n  position: fixed;\n  width: 100%;\n  z-index:100;\n  background: black;\n`;\n\nconst Wrapper = styled(Responsive)`\n    height: 3.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n`;\n\nconst Spacer = styled.div`\n  height: 0.3rem;\n`;\n\nconst LinkTo = styled(Link)`\n    font-size: 0.9em;\n    color: white;\n    font-weight: bold;\n    &:hover{\n        text-decoration: none;\n        color: #afafaf;\n    }\n`;\nconst Navbar = () => {\n    return (\n        <>\n        <NavBlock>\n            <Wrapper>\n                <LinkTo to=\"/todaytr\" className=\"logo\">\n                    오늘의 운동\n                </LinkTo>\n                <LinkTo to=\"/calendar\" className=\"logo\">\n                    운동 일지\n                </LinkTo>\n                <LinkTo to=\"/postlist\" className=\"logo\">\n                    커뮤니티\n                </LinkTo>\n                <LinkTo to=\"/mypage\" className=\"logo\">\n                    마이페이지\n                </LinkTo>\n            </Wrapper>\n        </NavBlock>\n        <Spacer />\n        </>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/style/palette';\n\nconst SubInfoBlock = styled.div`\n  ${props =>\n    props.hasMarginTop &&\n    css`\n      margin-top: 1rem;\n    `}\n  color: ${palette.gray[6]};\n  /* span 사이에 가운뎃점 문자 보여주기*/\n  span + span:before {\n    color: ${palette.gray[4]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7'; /* 가운뎃점 문자 */\n  }\n`;\n\nconst SubInfo = ({ username, userlevel, publishedDate, hasMarginTop }) => {\n  return (\n    <SubInfoBlock hasMarginTop={hasMarginTop}>\n      <span>\n        <b>\n          {userlevel}\n          <Link to={`/@${username}`} style={{color: `${palette.gray[6]}`, textDecoration: 'none'}}> {username}</Link>\n        </b>\n      </span>\n      <span>{new Date(publishedDate).toLocaleDateString()}</span>\n    </SubInfoBlock>\n  );\n};\n\nexport default SubInfo;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/style/palette';\nimport SubInfo from '../common/SubInfo';\nimport { Link } from 'react-router-dom';\n\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 5em;\n`;\n\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\n\nconst PostItem = ({ post }) => {\n  const [usrlevel, setLevel] = useState('');\n  const { publishedDate, user, title, body, _id } = post;\n\n\n  return (\n    <PostItemBlock>\n      <h2>\n        <Link to={`/@${user.username}/${_id}`} style={{color: 'black', textDecoration: 'none'}}>{title}</Link>\n      </h2>\n      {<SubInfo \n        username ={user.username} \n        userlevel={usrlevel}\n        publishedDate={new Date(publishedDate)}/>}\n      <p>{body}</p>\n    </PostItemBlock>\n  );\n};\n\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\n  const [check, setCheck] = useState(false);\n  useEffect(() => {\n    if(posts && posts.length == 0){\n      setCheck(true);   //게시글 존재 여부 판단\n    } else {\n      setCheck(false);\n    }\n  }, [posts])\n\n  if (error) {\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\n  }\n  \n  return (\n    <PostListBlock>\n      <WritePostButtonWrapper>\n      {showWriteButton && (\n          <Button to=\"/write\" style={{textDecoration: 'none', color: 'white'}}>\n            새 글 작성하기\n          </Button>\n        )}\n      </WritePostButtonWrapper>\n      {/*  로딩 중 아니고, 포스트 배열이 존재할 때만 보여줌 */}\n      {check && \n        <div style={{fontSize: '1.5rem', fontWeight: 'bold', padding:'4% 0'}}>\n          게시글이 없습니다.</div>}\n\n      {!loading && posts && (\n        <div>\n         {posts.map(post => (\n          <PostItem post={post} key={post._id} />\n        ))}\n        </div>\n      )}\n\n    </PostListBlock>\n  );\n};\n\nexport default PostList;","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  LIST_POSTS,\n  LIST_POSTS_SUCCESS,\n  LIST_POSTS_FAILURE,\n] = createRequestActionTypes('posts/LIST_POSTS');\nconst [\n  SEARCH_POSTS,\n  SEARCH_POSTS_SUCCESS,\n  SEARCH_POSTS_FAILURE,\n] = createRequestActionTypes('get/SEARCH_POSTS');\n\nexport const listPosts = createAction(\n    LIST_POSTS,\n    ({ username, page }) => ({ username, page }),\n);\n\nexport const searchPosts = createAction(\n    SEARCH_POSTS,\n    ({ page, option, content }) => ({ page, option, content }),\n);\n\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nconst searchPostsSaga = createRequestSaga(SEARCH_POSTS, postsAPI.searchPosts);\n\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n  yield takeLatest(SEARCH_POSTS, searchPostsSaga);\n}\n\nconst initialState = {\n  posts: null,\n  error: null,\n  lastPage: 1,\n};\n\nconst posts = handleActions(\n  {\n    [LIST_POSTS_SUCCESS]: (state, { payload: posts, meta: response }) => ({\n      ...state,\n      posts,\n      lastPage: parseInt(response.headers['last-page'], 10), // 문자열을 숫자로 변환\n    }),\n    [LIST_POSTS_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [SEARCH_POSTS_SUCCESS]: (state, { payload: posts, meta: response }) => ({\n      ...state,\n      posts,\n      lastPage: parseInt(response.headers['last-page'], 10), // 문자열을 숫자로 변환\n    }),\n    [SEARCH_POSTS_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState,\n);\n\nexport default posts;","import client from './client';\nimport qs from 'qs';\n\nexport const writePost = ({ title, body }) =>\n    client.post('/api/posts', { title, body });\n\nexport const readPost = id => client.get(`/api/posts/${id}`);\n\nexport const listPosts = ({ page, username }) => {\n    const queryString = qs.stringify({\n        page,\n        username\n    });\n    return client.get(`/api/posts?${queryString}`);\n};\n\nexport const searchPosts = ({ page, option, content }) => {\n  const queryString = qs.stringify({\n    page,\n    option,\n    content\n  });\n  return client.get(`/api/posts/search?${queryString}`);\n}\n\nexport const updatePost = ({ id, title, body, tags }) =>\n  client.patch(`/api/posts/${id}`, {\n    title,\n    body,\n    tags,\n  });\n\nexport const removePost = id => client.delete(`/api/posts/${id}`);\nexport const comment = ({text, username, id}) =>  \n  client.post(`/api/posts/comments`, {text, username, id});\n","import React, { useState } from 'react';\nimport{ useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\nimport styled from 'styled-components';\nimport Button from '../../components/common/Button';\nimport Responsive from '../../components/common/Responsive';\nimport palette from '../../lib/style/palette';\nimport { searchPosts } from '../../modules/posts';\n\nconst Wrapper = styled(Responsive)`\n    form {\n        display: flex;\n        width : 100%;\n        height : 40px;\n        justify-content: flex-end;\n    }\n    select{\n        width: 100px;\n        height: 100%;\n        border: none;\n        background: white;\n        border: 1px solid #E8E6E6;\n    }\n\n    input{\n        margin : 0 15px;\n        width : 250px;\n        height: 100%;\n        border: 1px solid #E8E6E6;\n        padding-left: .8em;\n        font-size: 1rem;\n        &:focus{\n            outline:none;\n        }\n    }\n    @media (max-width: 768px) {\n        select{\n            width: 60px;\n        }\n        input{\n            width: 200px;\n        }\n    }\n`;\nconst Cbutton = styled(Button)`\n    padding: 0.25rem 0.5rem;\n    border-radius: 4px;\n    width: 65px;\n    height: 40px;\n    font-weight: bold;\n    border: none;\n    outline: none;\n    font-size: 1rem;\n    cursor: pointer;\n    background: ${palette.blue[7]};\n    color: white;\n    &:hover {\n        background: ${palette.blue[6]};\n        color: white;\n    }\n    & + & {\n        margin-left: 0.25rem;\n    }\n    @media (max-width: 768px) {\n        width: 55px;\n    }\n`;\n\nconst SearchPostContainer = ({ location }) => {\n    const [value, setValue] = useState(\"\"); \n    const [options, setOptions] = useState(\"title\");\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        setValue(e.currentTarget.value);\n    };\n    const selectHandle = (e) => {\n        setOptions(e.currentTarget.value);\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const { page } = qs.parse(location.search, {\n            ignoreQueryPrefix: true,\n        });\n        \n        dispatch(searchPosts({ page: page, option: options, content: value }));\n        setValue('');\n    };\n    return (\n        <>\n        <Wrapper>\n            <form method=\"get\" onSubmit={onSubmit}>\n            <select value={options} onChange={selectHandle}>\n                <option value=\"title\">제목</option>\n                <option value=\"body\">내용</option>\n                <option value=\"title_body\">제목+내용</option>\n            </select>\n            <input \n                type=\"text\" name=\"searchText\"\n                onChange={ handleChange }\n                value={value}\n                placeholder=\"검색어를 입력하세요\"/>\n            <div>\n                <Cbutton type = \"submit\" onClick={onSubmit}>검색</Cbutton>\n            </div>\n            </form>\n        </Wrapper>\n        </>\n    )\n};\n\nexport default withRouter(SearchPostContainer);","import React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\nimport SearchPostContainer from './SearchPostContainer';\n\nconst PostListContainer = ({ location }) => {\n  const dispatch = useDispatch();\n  const { posts, error, loading, user } = useSelector(\n    ({ posts, loading, user }) => ({\n      posts: posts.posts,\n      error: posts.error,\n      loading: loading['posts/LIST_POSTS'],\n      user: user.user,\n    }),\n  );\n  useEffect(() => {\n    const { username, page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    dispatch(listPosts({ username, page }));\n  }, [dispatch, location.search]);\n\n  return (\n    <>\n    <PostList\n      loading={loading}\n      error={error}\n      posts={posts}\n      showWriteButton={user}\n    />\n    <SearchPostContainer />\n    </>\n  );\n};\n\nexport default withRouter(PostListContainer);","import React from 'react';\nimport styled from 'styled-components';\nimport qs from 'qs';\nimport Button from '../common/Button';\n\nconst PaginationBlock = styled.div`\n  width: 320px;\n  margin: 5em auto;\n  display: flex;\n  justify-content: space-between;\n\n`;\nconst PageNumber = styled.div``;\n\nconst buildLink = ({ username, page }) => {\n    const query = qs.stringify({ page });\n    return username ? `/postlist/@${username}?${query}` : `/postlist/?${query}`;\n};\n\nconst Pagination = ({ page, lastPage, username }) => {\n  return (\n    <>\n    <PaginationBlock>\n      <Button\n        disabled={page === 1}\n        to={\n          page === 1 ? undefined : buildLink({ username, page: page - 1 })\n        }\n      >\n        이전\n      </Button>\n      <PageNumber>{page}</PageNumber>\n      <Button\n        disabled={page === lastPage}\n        to={\n          page === lastPage\n            ? undefined\n            : buildLink({ username, page: page + 1 })\n        }\n      >\n        다음\n      </Button>\n    </PaginationBlock>\n    </>\n  );\n};\n\nexport default Pagination;","import React from 'react';\nimport Pagination from '../../components/posts/Pagination';\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\n\nconst PaginationContainer = ({ location, match }) => {\n  const { lastPage, posts, loading } = useSelector(({ posts, loading }) => ({\n    lastPage: posts.lastPage,\n    posts: posts.posts,\n    loading: loading['posts/LIST_POSTS'],\n  }));\n\n  // 포스트 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\n  if (!posts || loading) return null;\n  const { username } = match.params;\n  // page가 없으면 1을 기본값으로 사용\n  const {  page = 1 } = qs.parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n\n  return (\n    <Pagination\n      username={username}\n      page={parseInt(page, 10)}\n      lastPage={lastPage}\n    />\n  );\n};\n\nexport default withRouter(PaginationContainer);","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport './Footer.css';\n\nconst Footer = () => {\n  return (\n    <div className=\"mt-5 pt-5 pb-5 footer\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-5 col-xs-12 about-company\">\n          <h2 style={{fontStyle: 'oblique', fontWeight:'bold'}}>My AI Trainer</h2>\n          <p className=\"pr-3\">당신만의 Personal Trainer가 되어드립니다.<br/>지금 바로 운동을 시작하고 당신의 자세를 분석해보세요.</p>\n        </div>\n        <div className=\"col-lg-3 col-xs-12 links\">\n          <h4 className=\"mt-lg-0 mt-sm-3\"><i className=\"fa fa-link mr-3\"></i>Quick Links</h4>\n            <ul className=\"m-0 p-0\">\n              <li>- <Link to=\"/todaytr\">오늘의 운동</Link></li>\n              <li>- <Link to=\"/calendar\">운동 일지</Link></li>\n              <li>- <Link to=\"/postlist\">커뮤니티</Link></li>\n              <li>- <Link to=\"/mypage\">마이 페이지</Link></li>\n            </ul><p></p>\n        </div>\n        <div className=\"col-lg-4 col-xs-12 location\">\n          <h4 className=\"mt-lg-0 mt-sm-4\"><i className=\"fa fa-user-tie mr-3\"></i> Contact Us!</h4>\n          <p>서울시 용산구 청파로 47길 100 숙명여자대학교</p>\n          <p className=\"mb-0\"><i className=\"fa fa-phone mr-3\"></i>(02) 123-4567</p>\n          <p className=\"mb-0\"><i className=\"fa fa-envelope mr-3\"></i>listener@gmail.com</p>\n        </div>\n      </div>\n      <div className=\"row mt-5\">\n        <div className=\"col copyright\">\n            <h4 className=\"mt-lg-0 mt-sm-4 developer\">‍<i class=\"fas fa-code\"></i> Developers</h4>\n            <p className=\"m-1 p-1\">\n                <span className=\"dev\"><a href = \"https://github.com/jokj624\"><i className=\"fab fa-github-square mr-3\"></i></a> 채정아</span> \n                <span className=\"dev\"><a href = \"https://github.com/coolkim99\"><i className=\"fab fa-github-square mr-3\"></i></a> 김시원</span>\n                <span className=\"dev\"><a href = \"https://github.com/EunHye146\"><i className=\"fab fa-github-square mr-3\"></i></a> 주은혜</span>\n            </p>\n          <p></p>\n          <p>© 2021. All Rights Reserved.<br/> <a href=\"https://github.com/jokj624/AIhomeTraining_web\" style={{color:'#616161'}}>HomeTraining's Github</a></p>\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport Footer from '../../components/common/Footer';\n\nconst FooterContainer = () => {\n  return <Footer />;\n};\n\nexport default FooterContainer;\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport PostListContainer from '../containers/posts/PostListContainer';\nimport PaginationContainer from '../containers/posts/PaginationContainer';\nimport { Helmet } from 'react-helmet-async';\nimport FooterContainer from '../containers/common/FooterContainer';\n\n\nconst PostListPage = () => {\n  return (\n    <>\n    <Helmet>\n      <title>게시판</title>\n    </Helmet>\n      <HeaderContainer />\n      <NavContainer />\n      <PostListContainer />\n      <PaginationContainer />\n      <FooterContainer />\n    </>\n  );\n};\n\nexport default PostListPage;","import React, {useRef, useEffect} from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.bubble.css';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Responsive from '../common/Responsive';\n\nconst EditorBlock = styled(Responsive)`\n    /* 페이지 위 아래 여백 지정 */\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n`;\nconst TitleInput = styled.input`\n  font-size: 3rem;\n  outline: none;\n  padding-bottom: 0.5rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[4]};\n  margin-bottom: 2rem;\n  width: 100%;\n`;\nconst QuillWrapper = styled.div`\n  /* 최소 크기 지정 및 padding 제거 */\n  .ql-editor {\n    padding: 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor.ql-blank::before {\n    left: 0px;\n  }\n`;\n\nconst Editor = ({ title, body, onChangeField }) => {\n    const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\n    const quillInstance = useRef(null); // Quill 인스턴스를 설정\n  \n    useEffect(() => {\n      quillInstance.current = new Quill(quillElement.current, {\n        theme: 'bubble',\n        placeholder: '내용을 작성하세요...',\n        modules: {\n          // 더 많은 옵션\n          // https://quilljs.com/docs/modules/toolbar/ 참고\n          toolbar: [\n            [{ header: '1' }, { header: '2' }],\n            ['bold', 'italic', 'underline', 'strike'],\n            [{ list: 'ordered' }, { list: 'bullet' }],\n            ['blockquote', 'code-block', 'link', 'image'],\n          ],\n        },\n      });\n\n      const quill = quillInstance.current;\n      quill.on('text-change', (delta, oldDelta, source) => {\n          if(source === 'user') {\n              onChangeField({key: 'body', value: quill.root.innerHTML});\n          }\n      });\n    }, [onChangeField]);\n\n    const mounted = useRef(false);\n    useEffect(()=> {\n        if(mounted.current) return;\n        mounted.current = true;\n        quillInstance.current.root.innerHTML = body;\n    }, [body]);\n\n    const onChangeTitle = e => {\n        onChangeField({key: 'title', value: e.target.value});\n    }\n\n    return (\n      <EditorBlock>\n        <TitleInput\n          placeholder=\"제목을 입력하세요\"\n          onChange={onChangeTitle}\n          value={title}\n        />\n        <QuillWrapper>\n          <div ref={quillElement} />\n        </QuillWrapper>\n      </EditorBlock>\n    );\n  };\n  \n  export default Editor;","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'write/INITIALIZE'; // 모든 내용 초기화\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\nconst [\n  WRITE_POST,\n  WRITE_POST_SUCCESS,\n  WRITE_POST_FAILURE,\n] = createRequestActionTypes('write/WRITE_POST'); // 포스트 작성\n\nconst [\n  UPDATE_POST,\n  UPDATE_POST_SUCCESS,\n  UPDATE_POST_FAILURE,\n] = createRequestActionTypes('write/UPDATE_POST');  //포스트 수정\n\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\n  key,\n  value,\n}));\nexport const writePost = createAction(WRITE_POST, ({ title, body }) => ({\n  title,\n  body\n}));\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\nexport const updatePost = createAction(\n  UPDATE_POST,\n  ({ id, title, body }) => ({\n    id,\n    title,\n    body,\n  }),\n);\n\n// saga 생성\nconst writePostSaga = createRequestSaga(WRITE_POST, postsAPI.writePost);\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postsAPI.updatePost);\n\nexport function* writeSaga() {\n  yield takeLatest(WRITE_POST, writePostSaga);\n  yield takeLatest(UPDATE_POST, updatePostSaga);\n}\n\nconst initialState = {\n  title: '',\n  body: '',\n  post: null,\n  postError: null,\n};\n\nconst write = handleActions(\n  {\n    [INITIALIZE]: state => initialState, // initialState를 넣으면 초기상태로 바뀜\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\n      ...state,\n      [key]: value, // 특정 key 값을 업데이트\n    }),\n    [WRITE_POST]: state => ({\n      ...state,\n      // post와 postError를 초기화\n      post: null,\n      postError: null,\n    }),\n    // 포스트 작성 성공\n    [WRITE_POST_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    // 포스트 작성 실패\n    [WRITE_POST_FAILURE]: (state, { payload: postError }) => ({\n      ...state,\n      postError,\n    }),\n    [SET_ORIGINAL_POST]: (state, {payload: post}) => ({\n       ...state,\n       title: post.title,\n       body: post.body,\n       originalPostId: post._id, \n    }),\n    [UPDATE_POST_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    [UPDATE_POST_FAILURE]: (state, { payload: postError }) => ({\n      ...state,\n      postError,\n    }),\n  },\n  initialState,\n);\n\nexport default write;\n","import React, { useEffect, useCallback } from 'react';\nimport Editor from '../../components/write/Editor';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize } from '../../modules/write';\n\nconst EditorContainer = () => {\n  const dispatch = useDispatch();\n  const { title, body } = useSelector(({ write }) => ({\n    title: write.title,\n    body: write.body,\n  }));\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [\n    dispatch,\n  ]);\n  // 언마운트될 때 초기화\n  useEffect(() => {\n    return () => {\n      dispatch(initialize());\n    };\n  }, [dispatch]);\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\n};\n\nexport default EditorContainer;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport palette from '../../lib/style/palette';\n\nconst WriteActionButtonsBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n  margin-top: 1rem;\n  margin-bottom: 3rem;\n  button + button {\n    margin-left: 0.5rem;\n  }\n`;\n\n/* TagBox에서 사용하는 버튼과 일치하는 높이로 설정 후 서로 간의 여백 지정 */\nconst StyledButton = styled(Button)`\n  height: 2.125rem;\n  & + & {\n    margin-left: 0.5rem;\n  }\n`;\n\nconst WriteActionButtons = ({ onCancel, onPublish, isEdit }) => {\n  return (\n    <WriteActionButtonsBlock>\n      <StyledButton blue onClick={onPublish}>\n        포스트 {isEdit ? '수정' : '등록'}\n      </StyledButton>\n      <StyledButton onClick={onCancel}>취소</StyledButton>\n    </WriteActionButtonsBlock>\n  );\n};\n\nexport default WriteActionButtons;","import React, { useEffect } from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writePost, updatePost } from '../../modules/write';\n\nconst WriteActionButtonsContainer = ({ history }) => {\n  const dispatch = useDispatch();\n  const { title, body, post, postError, originalPostId } = useSelector(({ write }) => ({\n    title: write.title,\n    body: write.body,\n    post: write.post,\n    postError: write.postError,\n    originalPostId: write.originalPostId,\n  }));\n\n  // 포스트 등록\n  const onPublish = () => {\n    if(originalPostId){\n      dispatch(updatePost({ id: originalPostId, title, body }));\n      return;\n    }\n    dispatch(\n      writePost({\n        title,\n        body\n      }),\n    );\n  };\n\n  // 취소\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  // 성공 혹은 실패시 할 작업\n  useEffect(() => {\n    if (post) {\n      const { _id, user } = post;\n      history.push(`/@${user.username}/${_id}`);\n    }\n    if (postError) {\n      console.log(postError);\n    }\n  }, [history, post, postError]);\n  return <WriteActionButtons onPublish={onPublish} onCancel={onCancel} isEdit={!!originalPostId} />;\n};\n\nexport default withRouter(WriteActionButtonsContainer);","import React from 'react';\nimport Responsive from '../components/common/Responsive';\nimport EditorContainer from '../containers/write/EditorContainer';\nimport WriteActionButtonsContainer from  '../containers/write/WriteActionButtonsContainer';\n\nconst WritePage = () => {\n    return (\n        <Responsive>\n            <EditorContainer />\n            <WriteActionButtonsContainer />\n        </Responsive>\n    );\n};\n\nexport default WritePage;","export default __webpack_public_path__ + \"static/media/exercise19.d8a7517d.jpg\";","export default __webpack_public_path__ + \"static/media/exercise18.42006514.jpg\";","export default __webpack_public_path__ + \"static/media/exercise20.37d58730.jpg\";","export default __webpack_public_path__ + \"static/media/exercise15.024580fc.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport exercise2 from '../../img/exercise19.jpg'\nimport exercise3 from '../../img/exercise18.jpg'\nimport exercise4 from '../../img/exercise20.jpg'\nimport exercise5 from '../../img/exercise15.jpg'\nimport Slider from 'react-slick';\nimport Fade from 'react-reveal';\nimport { Link } from 'react-router-dom';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './MainPhoto.css';\n\nconst Wrap = styled.div`\n    position: relative;\n`;\n\nconst Text = styled.div`\n    position: absolute;\n    left : 50%;\n    transform:translateX(-50%);\n    margin-left : 15px;\n    top: 80%;\n    border 4px solid white;\n    @media (max-width: 768px) {\n        border 3.5px solid white;\n        margin-left : 0px;\n    }\n`;\nconst H = styled.div`\n    font-size: 2em;\n    font-weight: bold;\n    color: white;\n    text-align:center;\n    @media (max-width: 768px) {\n        font-size: 1.5em;\n    }\n\n`\nconst LinkTo = styled(Link)`\n    color: white;\n    &:hover{\n        text-decoration: none;\n        color: white;\n    }\n`;\n\nclass MainPhoto extends React.Component {\n    render() {\n        const settings = {\n            dots: false,\n            arrows:false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            fade:true,\n            centerPadding: '100px',\n            autoplay: true,\n            autoplaySpeed: 3500,\n            useCss : true\n        };\n    return (\n        <>\n        <div> \n            <Fade cascade>\n            <Slider {...settings}>\n            <Wrap>\n                <img src = {exercise2} width='100%' height='600px'></img>\n                <Text>\n                    <H><LinkTo to=\"/todaytr\">start now!</LinkTo></H>\n                </Text>\n            </Wrap>\n            <Wrap>\n                <img src = {exercise3} width='100%' height='600px'></img>\n                <Text>\n                    <H><LinkTo to=\"/todaytr\">start now!</LinkTo></H>\n                </Text>\n            </Wrap>\n            <Wrap>\n                <img src = {exercise4} width='100%' height='600px'></img>\n                <Text>\n                    <H><LinkTo to=\"/todaytr\">start now!</LinkTo></H>\n                </Text>\n            </Wrap>\n            <Wrap>\n                <img src = {exercise5} width='100%' height='600px'></img>\n                <Text>\n                    <H><LinkTo to=\"/todaytr\">start now!</LinkTo></H>\n                </Text>\n            </Wrap>\n            </Slider>\n            </Fade>\n        </div>\n        </>\n    );\n};\n};\n\nexport default MainPhoto;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Responsive from './Responsive';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport palette from '../../lib/style/palette';\nimport './MainAbout.css';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n\nconst Wrapper = styled(Responsive)`\n    display: inline-flex;\n    align-items: center;\n    width: 100%;\n    z-index: 100;\n    justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n    @media only screen and (max-width: 700px) {\n        display: inline-block;\n    }\n`;\nconst InDiv = styled(Responsive)`\n    margin-top: 3px;\n`;\n\nconst LinkTo = styled(Link)`\n    &:hover{\n        text-decoration: none;\n    }\n`;\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '370px', \n    height: '240px',\n    margin: 'auto',\n    boxShadow: '5px 5px 5px 3px #616161',\n    marginBottom : '15px',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 5px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 15,\n    marginBottom : '10px',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst About = styled(Responsive)`\n    h2 {\n      font-family: 'Poppins', sans-serif;\n        padding : 15px;\n        margin-bottom : 70px;\n        font-size : 2.5rem;\n        border-bottom : 2px solid ${palette.gray[5]};\n    }\n    p {\n      margin-bottom : 5px;\n      font-style : italic;\n      font-size : 1.1rem;\n    }\n    span {\n      font-size : 1.1rem;\n      font-weight : bold;\n    }\n    text-align : center; \n`;\n\n\nexport default function MainCard() {\n  const classes = useStyles();\n  return (\n    <>\n    <About>\n      <h2>TUTORIAL</h2>\n    </About>\n    <Wrapper>\n    <InDiv>\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          STEP 1\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          오늘의 운동\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br/>\n          시작 버튼을 누르고 준비된 운동을 완료하세요.<br/>\n          운동 자세를 인식하여 완료 후 운동 자세를 분석해줍니다.           \n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LinkTo to=\"/todaytr\">\n        <Button size=\"large\" startIcon={<NavigateNextIcon />} style={{fontWeight:'bold'}}>지금 시작하기</Button>\n        </LinkTo>\n      </CardActions>\n      </Card>\n        </InDiv>\n        <InDiv>\n      <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          STEP 2\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          운동 일지\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br/>\n          캘린더에서 당신만의 운동 일지를 확인해보세요.<br/>\n          언제, 얼마나 열심히 운동했는지 볼 수 있습니다. <br/>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LinkTo to=\"/calendar\">\n        <Button size=\"large\" startIcon={<NavigateNextIcon />}  style={{fontWeight:'bold'}}>지금 확인하기</Button>\n        </LinkTo>\n      </CardActions>\n    </Card>\n    </InDiv>\n    </Wrapper>\n    <Wrapper>\n    <InDiv>\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          STEP 3\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          커뮤니티\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br/>\n          매일 새로운 글들이 당신을 기다립니다.<br/>\n          유저들의 운동 이야기를 보고, 당신만의 운동 노하우를 나눠보세요.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LinkTo to=\"/postlist\">\n        <Button size=\"large\" startIcon={<NavigateNextIcon />}  style={{fontWeight:'bold'}}>새 글 보러가기</Button>\n        </LinkTo>\n      </CardActions>\n      </Card>\n    </InDiv>\n    <InDiv>\n      <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          STEP 4\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          마이페이지\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          <br/>\n          당신의 운동 레벨과 경험치를 확인하세요.<br/>\n          총 운동 시간에 따라 7개의 레벨로 나눠집니다.<br/>\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LinkTo to=\"/mypage\">\n        <Button className={classes.button} startIcon={<NavigateNextIcon />}  size=\"large\" style={{fontWeight:'bold'}}>지금 확인하기</Button>\n        </LinkTo>\n      </CardActions>\n      </Card>\n      </InDiv>\n    </Wrapper>\n    </>\n  );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from './Responsive';\nimport palette from '../../lib/style/palette';\nimport './MainAbout.css';\n\nconst About = styled(Responsive)`\n    h2 {\n      font-family: 'Poppins', sans-serif;\n        padding : 15px;\n        margin-bottom : 70px;\n        font-size : 2.5rem;\n        border-bottom : 2px solid ${palette.gray[5]};\n    }\n    p {\n      margin-bottom : 5px;\n      font-style : italic;\n      font-size : 1.1rem;\n    }\n    span {\n      font-size : 1.1rem;\n      font-weight : bold;\n    }\n    text-align : center; \n`;\n\nconst Paragraph = styled.div`\n    margin-top : 60px;\n`;\n\nconst Spacer = styled.div`\n  height: 10rem;\n`;\n\nconst MainAbout = () => {\n    return (\n      <>\n        <About className = \"about\">\n            <h2>ABOUT</h2>\n            <Paragraph>\n              <p><span>MAIT</span>는 My AI Trainer의 약자로,</p>\n              <p>딥러닝을 기반으로 하여 운동 자세를 인식하고, 분석을 통해 자세를 교정해주는</p>\n              <p>AI 홈트레이닝 웹페이지입니다.</p>\n            </Paragraph>\n            <Paragraph>\n              <p>나만의 트레이너인 운동 메이트와 함께 운동하며 건강한 운동습관을 만들어보세요.</p>\n              <p></p>\n            </Paragraph>\n        </About>\n        <Spacer />\n      </>\n    );\n  };\n  \n  export default MainAbout;","import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from './Responsive';\nimport Fade from 'react-reveal';\nimport './Main.css'\nimport MainPhoto from './MainPhoto';\nimport MainCard from './MainCard';\nimport MainAbout from './MainAbout';\nconst Spacer1 = styled.div`\n  height: 0.3rem;\n`;\n\nconst Tutorial = styled(Responsive)`\n  padding-top: 3%;\n    h1 {\n        font-size : 1.2rem;\n        border-bottom: 2px solid rgba(0, 0, 0, 0.08);\n    }\n    span {\n        font-size : 1rem;\n    }\n`;\n\nconst Main = () => {\n    return (\n      <>\n      <Spacer1 />\n      <MainPhoto/> \n      \n      <Tutorial>\n      <Fade bottom>\n        <MainAbout />\n        <MainCard />\n      </Fade>\n      </Tutorial> \n      \n      <Spacer1/>\n      \n      </>\n    );\n  };\n  \n  export default Main;","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport Main from '../components/common/Main';\nimport FooterContainer from '../containers/common/FooterContainer';\n\n\nfunction main() {\n  return (\n    <>\n      <HeaderContainer />\n      <NavContainer />\n      <Main />\n      <FooterContainer/>\n    </>\n  );\n}\nexport default main;","import React, { useEffect } from \"react\";\nimport Sketch from \"react-p5\";\nimport ml5 from \"ml5\";\nimport styled from 'styled-components';\nimport {Animated} from \"react-animated-css\";\nimport './Test.css';\n\nconst LabelBlock = styled.div`\n    font-size : 3em;\n    text-align : center;\n    font-weight: bold;\n    padding: 1rem;\n\n`;\nconst Spacer = styled.div`\n    height: 4rem;\n`;\n\nconst Wrapper = styled.div`\n    position: relative;\n    text-align: center;\n`;  \n\nconst Test = ({getData, squatCount, lungeCount, shoulderCount, seconds, minutes, hours}) => {\n    let video, poseNet, brain, pose, skeleton,state = 'waiting';\n    let squat = 0, lungeL = 0, lungeR = 0, press = 0, tree = 0, ck = 0;  //운동 횟수 변수\n    let squatCk = 0, lungeLCk = 0, lungeRCk = 0, pressCk = 0, treeCk = 0; // 각 운동 종료 여부 확인 변수\n    let poseLabel = '분석 중';\n    let timer, timeover;\n    const ww = window.innerWidth*0.7;\n    const wh = window.innerHeight*0.7;\n\n    let analysis = [\n        {\n            exname: \"스쿼트\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"사이드 런지 왼쪽\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"사이드 런지 오른쪽\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"숄더프레스\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"나무 자세\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        }\n    ]\n    useEffect(() => {\n        myCustomRedrawAccordingToNewPropsHandler();\n    }, []) //test\n\n    const setup = (p5,  canvasParentRef) => {\n        p5.createCanvas(window.innerWidth*0.7, window.innerHeight*0.7).parent(canvasParentRef);\n        video = p5.createCapture(p5.VIDEO);\n        video.size(window.innerWidth*0.7, window.innerHeight*0.7);\n        video.hide();\n        poseNet = ml5.poseNet(video);   //posenet 시작\n        poseNet.on('pose',gotPoses);\n        const options = {\n            inputs: 34,\n            outputs: 7,\n            task: 'classification',\n            debug: true\n        };\n        brain = ml5.neuralNetwork(options);  //ml5 neuralNetwork 시작\n        const modelInfo = {\n            model:\"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model.json\",\n            metadata : \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model_meta.json\",\n            weights: \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model.weights.bin\"\n          };  //model load\n         brain.load(modelInfo, brainLoaded);\n    };\n\n    const draw = (p5) => {\n        p5.translate(p5.width, 0);\n        p5.scale(-1, 1);\n        p5.image(video, 0, 0, window.innerWidth*0.7, window.innerHeight*0.7);\n        if(pose){\n            for(let i=0; i<skeleton.length; i++){\n                let a = skeleton[i][0];\n                let b = skeleton[i][1];\n                p5.strokeWeight(2);\n                p5.stroke(73, 161, 165);\n                p5.line(a.position.x*(window.innerWidth*0.7/ww), a.position.y*(window.innerHeight*0.7/wh), b.position.x*(window.innerWidth*0.7/ww), b.position.y*(window.innerHeight*0.7/wh));\n            }\n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x*(window.innerWidth*0.7/ww);\n                let y = pose.keypoints[i].position.y*(window.innerHeight*0.7/wh);\n                p5.fill(0);\n                p5.stroke(255);\n                p5.ellipse(x,y,10,10); \n            }\n        }\n    };\n    const windowResized = (p5) => {\n        p5.resizeCanvas(window.innerWidth*0.7, window.innerHeight*0.7, true);\n      };\n    \n\n    const myCustomRedrawAccordingToNewPropsHandler = () => {\n        if(getData){\n            getData(analysis);    //Exercise Container 로 전달\n        }\n    };\n\n    const gotPoses = (poses, x, y) => {\n        if(poses.length > 0){\n          pose = poses[0].pose;\n          skeleton = poses[0].skeleton;\n          \n          for(let i =0; i<pose.keypoints.length; i++){\n              x = pose.keypoints[i].position.x;\n              y = pose.keypoints[i].position.y;\n            }\n        \n        }\n    };\n    const brainLoaded = () => {\n        console.log('classification ready!');\n        classifyPose();\n    };\n    const classifyPose = () => {\n        detectPose();   //사람 카메라 안으로 들어왔는지 확인 하는 함수\n        if(pose && (state == 'ready')){\n            let inputs = [];\n            for(let i =0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                inputs.push(x);\n                inputs.push(y);\n            }\n            brain.classify(inputs, gotResult);   \n        } else{\n            setTimeout(classifyPose, 100);  //pose 없으면 대기 후 다시 \n          }\n    };\n    const detectPose = () => {\n        state = 'waiting'\n        if (pose) {\n          let nose = pose.keypoints[0].score;\n          let ankleR = pose.keypoints[14].score;\n          if ((nose > 0.5) && (ankleR > 0.5)) {\n            state = 'ready';\n          } else {\n            state = 'waiting';\n          }\n        }\n    };\n    const gotResult = (err, results) => {\n        //console.log(results);\n        if(err){\n            console.log(err);\n            return;\n        }\n        if(results && (results[0].confidence > 0.5)){\n            let la = results[0].label;\n            if(la == '0')    poseLabel = '분석 중';\n            else if(la == '1')  poseLabel = '스쿼트';\n            else if(la == '2')  poseLabel = '런지 왼쪽';\n            else if(la == '3')  poseLabel = '런지 오른쪽';\n            else if(la == '4')  poseLabel = '숄더프레스';\n            else if(la == '5')  poseLabel = '나무 자세';\n          }\n          else  poseLabel = '분석 중';\n          if(poseLabel == '분석 중'){\n              ck = 0;\n              if(tree>0 && !treeCk){        //나무 자세 시간 종료 전에 멈추면 다시 시작하라고 알림\n                  clearInterval(timer);\n                  clearTimeout(timeover);\n                  document.getElementById(\"test\").innerHTML = \"나무 자세 다시 시작 하세요\";\n              }\n          } \n          else {\n            inputLabel(poseLabel);    //라벨, 횟수 화면에 보여주는\n          }\n          classifyPose();\n    };\n\n    const save = (index, isTree) => {\n        //현재 자세 좌표 저장하는 함수\n        //isTree == 1 => 나무 자세 좌표 (평균 낼 필요 없음)\n        if(!isTree){    \n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                if (index === 0) {\n                    analysis[index].x[i] += (x/squatCount);\n                    analysis[index].y[i] += (y/squatCount);\n                }\n                else if (index === 1) {\n                    analysis[index].x[i] += (x/lungeCount);\n                    analysis[index].y[i] += (y/lungeCount);\n                }\n                else if (index === 2) {\n                    analysis[index].x[i] += (x/lungeCount);\n                    analysis[index].y[i] += (y/lungeCount);\n                }\n                else {\n                    analysis[index].x[i] += (x/shoulderCount);\n                    analysis[index].y[i] += (y/shoulderCount);\n                }\n            }\n        }    \n        else{\n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                analysis[index].x[i] += x;\n                analysis[index].y[i] += y;   \n            }\n        }\n    };\n\n    let inputLabel = (label) => {    // 운동 횟수 세기 + 라벨 작성 함수\n        if(label == '스쿼트' && !ck && squat < squatCount){\n            save(0, 0);  // 현재 좌표 저장\n            squat += 1;\n            document.getElementById(\"test\").innerHTML = `${label}`+ \" \" + `${squat}` + \"회\";\n            ck = 1;\n            if(squat == squatCount && !squatCk){\n                document.getElementById(\"test\").innerHTML = \"사이드 런지 왼쪽 시작하세요\";\n                squatCk = 1;\n            }\n        }  // 스쿼트 개수 세기 (임의로 3개로 해둠)\n        else if(label == '런지 왼쪽' && !ck && lungeL < lungeCount && squatCk==1){\n            save(1, 0);\n            lungeL += 1;\n            document.getElementById(\"test\").innerHTML = `${label}`+ \" \" + `${lungeL}` + \"회\";\n            ck = 1;\n            if(lungeL == lungeCount && !lungeLCk){\n                document.getElementById(\"test\").innerHTML = \"사이드 런지 오른쪽 시작하세요\";\n                lungeLCk = 1;\n            }\n        }\n        else if(label == '런지 오른쪽' && !ck && lungeR < lungeCount && lungeL >= lungeCount && lungeLCk == 1){\n            save(2, 0);\n            lungeR += 1;\n            document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${lungeR}` + \"회\";\n            ck = 1;\n            if(lungeR == lungeCount && !lungeRCk){\n                document.getElementById(\"test\").innerHTML = \"숄더프레스 시작하세요\";\n                lungeRCk = 1;\n            }\n        }\n        else if(label == '숄더프레스' && !ck && press < shoulderCount && lungeRCk == 1){\n            press += 1;\n            document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${press}` + \"회\";\n            ck = 1;\n            console.log('new build');\n            setTimeout(() => {\n                save(3, 0);\n            }, 1000);\n            if(press == shoulderCount && !pressCk){\n                document.getElementById(\"test\").innerHTML = \"나무 자세 시작하세요\";\n                pressCk = 1; \n            }\n        }\n        else if(label == '나무 자세' && !ck && pressCk == 1){\n            tree += 1;\n            ck = 1;   \n            if(!treeCk){\n                let sec = 15;\n                timer = setInterval(() => {\n                    if(sec == 2)    save(4, 1);     //종료 직전에 좌표 저장\n                    document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${sec--}` + \"초 남았습니다.\";\n                }, 1000);   //1초마다 반복\n\n                timeover = setTimeout(()=>{\n                    clearInterval(timer);\n                    treeCk = 1;\n                    document.getElementById(\"test\").innerHTML = \"운동 종료\";\n                    myCustomRedrawAccordingToNewPropsHandler();   //Exercise Container 로 analysis 배열 전달하는 함수\n                }, 16000);      //1초 더 많이 해야 잘 맞음\n            }\n        }\n    };\n\n   return (\n    <>\n    <Wrapper>\n    <Animated animationIn=\"fadeIn\"><LabelBlock id='test'>스쿼트를 시작하세요</LabelBlock></Animated>\n      <Sketch setup={setup} draw={draw} windowResized={windowResized}/>\n    </Wrapper>\n    </>\n   )\n};\nexport default Test;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Progress = styled.div`\n    backgrond-color: #d8d8d8;\n    border-radius: 20px;\n    position: relative;\n    height: 30px;\n    width: 450px;\n    top : 200px;\n    margin : 0 auto;\n    @media (max-width: 750px) {\n        width: 350px;\n        height : 500px\n    }\n`;\n\nconst Done = styled.div`\n    background: linear-gradient(to left, #8BC4C1, #65A1A0);\n    box-shadow: 0 3px 3px -5px #8BC4C1, 0 2px 5px #8BC4C1;\n    border-radius: 20px;\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    hegiht: 100%;\n    width: 0;\n    opacity: 0;\n    transition: 3s ease;\n    margin-top: 5%;\n`;\n\nconst Text = styled.span`\n    font-weight: bold;\n    font-size: 1.5em;\n`;\nconst LoadingBar = ({ done }) => {\n    const [style, setStyle] = useState({});\n    setTimeout(()=> {\n        const newStyle = {\n            opacity: 1,\n            width: `${done}%`\n        }\n        setStyle(newStyle);\n    }, 300);\n//가운데 정렬 되도록 수정해야함\n    return (\n        <Progress>\n            <Text>분석 중입니다.</Text>\n            <Done style={style}>{done}%</Done>\n        </Progress>\n    )\n}\n\n\nexport default LoadingBar;","export default __webpack_public_path__ + \"static/media/squatIcon.81d43f46.png\";","export default __webpack_public_path__ + \"static/media/lungeIcon.b27955d5.png\";","export default __webpack_public_path__ + \"static/media/pressIcon.9eaf96a1.png\";","export default __webpack_public_path__ + \"static/media/treeIcon.b519c571.png\";","import React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport palette from '../../lib/style/palette';\nimport squatIcon from '../../img/squatIcon.png';\nimport lungeIcon from '../../img/lungeIcon.png';\nimport pressIcon from '../../img/pressIcon.png';\nimport treeIcon from '../../img/treeIcon.png';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\n\nconst Ex = styled.div`\n    position: relative;\n    width: 90%;\n    left: 5%;\n    text-align: center;\n    align-items : center;\n    border-radius: 5px;\n    box-shadow: 5px 5px 5px 5px gray;\n    padding-bottom: 2rem;\n    background-color: #f7f7f7;\n    h2{\n        padding-top: 15px;\n        font-weight: bold;\n        font-size : 1.5em;\n        margin-bottom : 40px;\n    }\n\n    @media (max-width: 768px) {\n        height : 1900px;\n    }\n\n`\nconst MtDiv = styled.div`\n    display : block;\n    margin-top : 20px;\n\n`\nconst Mait = styled.div`\n    font-size: 1.5em;\n    color: black;\n    font-style: oblique;\n    font-weight: bold;\n    &:hover{\n        color: gray;\n        text-decoration: none;\n    }\n`;\n\nconst Mt = styled.div`\n    font-size: 1.5em;\n    color: black;\n    ul {\n        padding : 0;\n        list-style-type:none;\n    }\n    li {\n        font-size : 1rem;\n    }\n`;\n\nconst Ai = styled.span`\n  color : ${palette.indigo[9]};\n`;\nconst ExLabel = styled.div`\n    margin-top : 20px;\n    padding : 30px;\n    width : 90%;\n    display: flex;\n    transform: translateX(5%);\n    justify-content: space-between; /* 자식 엘리먼트 사이에 여백을 최대로 설정 */\n    @media (max-width: 768px) {\n        display : block;\n        padding : 30px;\n      }\n\n`\nconst Pose = styled.div`\n    display : inline-block;\n    top : 0;\n    img {\n        width : 90px;\n        margin-bottom : 20px;\n    }\n    h3 {\n        font-family: 'Gothic A1', sans-serif;\n        font-size : 1rem;\n    }\n    h4 {\n        font-family: 'Gothic A1', sans-serif;\n        font-size : 0.95rem;\n    }\n    @media screen and (max-width: 768px) {\n        display : block;\n        border-bottom : solid rgba(0, 0, 0, .3);\n        margin-bottom : 15px;\n    }\n`;\nconst ScoreDiv = styled.div`\n    width : 100%;\n   text-align : center;\n`\n\nconst Score = styled.div`\n    width : 200px;\n    height : 200px;\n    border-radius : 50%;\n    display : inline-block;\n    box-shadow: 4px 7px 7px 1px rgba(0, 0, 0, 0.3);\n    h3 {\n        font-family: 'Gothic A1', sans-serif;\n        font-size : 2.75rem;\n        text-align : center;\n        line-height : 210px;\n    }\n    \n`\n\nconst Grade = styled.div`\n    position : absolute;\n    left : 50%;\n    color : red;\n    font-size : 5rem;\n    font-family: 'Gothic A1', sans-serif;\n    font-style : italic;\n    transform: translate(-120%, -10%);\n`\n\nconst ExerciseResult = ({ mistakes }) => {\n    \n    const [lender, setLender] = useState(false);\n    useEffect(() => {\n        let str = \"운동을 진행해주세요\";\n        if(mistakes[0].squat[0] == str || mistakes[0].lungeL[0] == str || mistakes[0].lungeR[0] == str || mistakes[0].press[0] == str || mistakes[0].tree[0]==str){\n            setLender(true);\n        }\n    }, []);\n\n    let squat = mistakes[0].squat;\n    let lungeL = mistakes[0].lungeL;\n    let lungeR = mistakes[0].lungeR;\n    let press = mistakes[0].press;\n    let tree = mistakes[0].tree;\n\n    let squatMt, lungeLMt, lungeRMt, pressMt, treeMt;\n\n    if (squat.length == 0)  squatMt = <li>완벽합니다!</li>;\n    else squatMt = squat.map((value) => <li>{value}</li>);\n\n    if (lungeL.length == 0)  lungeLMt = <li>완벽합니다!</li>;\n    else lungeLMt = lungeL.map((value) => <li>{value}</li>);\n\n    if (lungeR.length == 0)  lungeRMt = <li>완벽합니다!</li>;\n    else lungeRMt = lungeR.map((value) => <li>{value}</li>);\n\n    if (press.length == 0)  pressMt = <li>완벽합니다!</li>;\n    else pressMt = press.map((value) => <li>{value}</li>);\n\n    if (tree.length == 0)  treeMt = <li>완벽합니다!</li>;\n    else treeMt = tree.map((value) => <li>{value}</li>);\n\n    let mtNum = squat.length + lungeL.length + lungeR.length + press.length + tree.length;\n\n    let grade, fail;\n    if(!lender){\n        if (mtNum == 0 || mtNum == 1) grade = 'A+';\n        else if (mtNum == 2 || mtNum == 3) grade = 'A-';\n        else if (mtNum == 4 || mtNum == 5) grade ='B+';\n        else if (mtNum == 6 || mtNum == 7) grade ='B-';\n        else if (mtNum == 8 || mtNum == 9) grade ='C+';\n        else if (mtNum == 10 || mtNum == 11) grade ='C-';\n        else if (mtNum == 12) grade ='D+';\n        else if (mtNum == 13) grade ='D-';\n        else if (mtNum == 14) grade ='F!!';\n        fail = 14 - mtNum;\n    } else {\n        grade = 'F!';\n        fail = '?';\n    }\n\n    return(\n        \n        <Ex>\n            <div style = {{ paddingTop: '10px', paddingBottom: '10px', backgroundColor: '#e9e9e9'}} >\n            <Mait>M<Ai>AI</Ai>T</Mait>\n            </div>\n            <h2>오늘의 운동 결과</h2>\n           <ScoreDiv>\n                <Grade>{grade}</Grade>\n            <Score>\n                <h3>{fail}/14</h3>\n            </Score>\n            </ScoreDiv> \n            <ExLabel>\n            <Pose>\n                <img src = {squatIcon}/>\n                <h3>스쿼트</h3>\n                <KeyboardArrowDownIcon/>\n                <MtDiv>\n                <Mt>\n                    <ul>\n                    {squatMt}\n                    </ul>\n                </Mt>\n                </MtDiv>\n            </Pose>\n\n            <Pose>\n                <img src = {lungeIcon}/>\n                <h3>런지</h3>\n                <KeyboardArrowDownIcon/>\n                <MtDiv>\n                    <h4>왼쪽</h4>\n                    <Mt>\n                        <ul>\n                        {lungeLMt}\n                        </ul>\n                    </Mt>\n                </MtDiv>\n                <MtDiv>\n                    <h4>오른쪽</h4>\n                    <Mt>\n                        <ul>\n                        {lungeRMt}\n                        </ul>\n                    </Mt>\n                </MtDiv>\n            </Pose>\n\n            <Pose>\n                <img src = {pressIcon}/>\n                <h3>숄더프레스</h3>\n                <KeyboardArrowDownIcon/>\n                <MtDiv>\n                <Mt>\n                    <ul>\n                    {pressMt}\n                    </ul>\n                </Mt>\n                </MtDiv>\n            </Pose>\n\n            <Pose>\n                <img src = {treeIcon} style ={{width : '120px', height :\"90px\"}}/>\n                <h3>나무자세</h3>\n                <KeyboardArrowDownIcon/>\n                <MtDiv>\n                <Mt>\n                    <ul>\n                {treeMt}\n                </ul>\n                </Mt>\n                </MtDiv>\n            </Pose>\n            </ExLabel>\n\n        </Ex>\n    );\n};\n\nexport default ExerciseResult;","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport {Animated} from \"react-animated-css\";\nimport LoadingBar from '../common/LoadingBar';\nimport Responsive from '../common/Responsive';\nimport ExerciseResult from './ExerciseResult';\n\nconst Wrapper1 = styled.div`\n  position:relative;\n  text-align: center;\n`;\n\nconst Wrapper2 = styled.div`\nheight : 500px;\n  position:relative;\n  text-align: center;\n`;\n\nconst Loading = styled(Responsive)`\n    display: flex;\n    width: 100%;\n    align-items: center;\n\n`;\n\nconst Spacer = styled.div`\n  height: 5rem;\n  `;\n\nconst Check = ({analysis}) => {\n    const [showResults, setShowResults] = useState(false);\n    const [trainerAngle, setTrainer] = useState([]);\n    const [result, setResult] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const { user } = useSelector(({ user }) => ({\n        user: user.user\n      }));\n    let mistakes = [   \n      {\n        squat: [],\n        lungeL: [],\n        lungeR: [],\n        press: [],\n        tree: []\n      }\n    ]\n    let userAngle = [\n      {\n        exname: \"스쿼트\",\n        angle: []\n      },\n      {\n        exname: \"사이드 런지 왼쪽\",\n        angle: []\n      },\n      {\n        exname: \"사이드 런지 오른쪽\",\n        angle: []\n      },\n      {\n        exname: \"숄더 프레스\",\n        angle: []\n      },\n      {\n        exname: \"나무 자세\",\n        angle: []\n      }\n    ];\n    const hours = parseInt(user.s/60/60);\n    const minutes = parseInt(user.s%(60*60)/60);\n    const seconds = parseInt(user.s%60);\n\n    const angle = (exer) => {   //user의 좌표로 8개의 인체 각도 계산\n      let idx = 0;\n      if(exer.exname == \"사이드 런지 왼쪽\"){\n        idx = 1;\n      }\n      else if(exer.exname == \"사이드 런지 오른쪽\"){\n        idx = 2;\n      }\n      else if(exer.exname == \"숄더프레스\"){\n        idx = 3;\n      }\n      else if(exer.exname == \"나무 자세\"){\n        idx = 4;\n      }\n      const inputX = exer.x, inputY = exer.y;\n      //왼쪽 허리 부분 (상체-하체)\n      userAngle[idx].angle.push((Math.abs(Math.atan2(inputY[13] - inputY[11], inputX[13] - inputX[11])) + Math.abs(Math.atan2(inputY[5] - inputY[11], inputX[5] - inputX[11]))) * (180 / Math.PI));\n      //오른쪽 허리 부분 (상체-하체)\n      userAngle[idx].angle.push(360 - (Math.abs(Math.atan2(inputY[14] - inputY[12], inputX[14] - inputX[12])) + Math.abs(Math.atan2(inputY[6] - inputY[12], inputX[6] - inputX[12]))) * (180 / Math.PI));\n      //왼쪽 상체 팔(겨드랑이 부분)\n      userAngle[idx].angle.push((Math.abs(Math.atan2(inputY[11] - inputY[5], inputX[11] - inputX[5])) + Math.abs(Math.atan2(inputY[7] - inputY[5], inputX[7] - inputX[5]))) * (180 / Math.PI));\n      //오른쪽 상체 팔(겨드랑이 부분)\n      userAngle[idx].angle.push(360 - (Math.abs(Math.atan2(inputY[8] - inputY[6], inputX[8] - inputX[6])) + Math.abs(Math.atan2(inputY[12] - inputY[6], inputX[12] - inputX[6]))) * (180 / Math.PI));\n      //왼쪽 팔꿈치\n      userAngle[idx].angle.push((Math.abs(Math.atan2(inputY[9] - inputY[7], inputX[9] - inputX[7])) + Math.abs(Math.atan2(inputY[5] - inputY[7], inputX[5] - inputX[7]))) * (180 / Math.PI));\n      //오른쪽 팔꿈치 \n      userAngle[idx].angle.push(360 - (Math.abs(Math.atan2(inputY[10] - inputY[8], inputX[10] - inputX[8])) + Math.abs(Math.atan2(inputY[6] - inputY[8], inputX[6] - inputX[8]))) * (180 / Math.PI));\n      //왼쪽 무릎\n      userAngle[idx].angle.push((Math.abs((Math.atan2(inputY[15] - inputY[13], inputX[15] - inputX[13])) + Math.abs(Math.atan2(inputY[11] - inputY[13], inputX[11] - inputX[13])))) * (180 / Math.PI));\n      //오른쪽 무릎\n      userAngle[idx].angle.push(360 - (Math.abs((Math.atan2(inputY[16] - inputY[14], inputX[16] - inputX[14])) + Math.abs(Math.atan2(inputY[12] - inputY[14], inputX[12] - inputX[14])))) * (180 / Math.PI));\n      console.log(userAngle[idx]);\n     \n      if(idx == 4){\n        calculateAngle();\n      }\n    };\n\n    const calculateAngle = () => {\n       //자세 분석 결과 저장\n      console.log(trainerAngle);\n      let cmp = 0.0; //각도 차\n      let str = \"\";\n      let squatms = [], lungeLms = [], lungeRms = [], pressms = [], treems = [];\n\n      if(userAngle[0].angle[0] == 0){\n        str = \"운동을 진행해주세요\";\n        squatms.push(str);\n      } else {     //스쿼트\n        cmp = (360-trainerAngle[0][\"0\"]) - (360-userAngle[0].angle[0]);   //스쿼트 허리 계산\n        if(cmp > 10){\n          str = \"상체를 조금 더 세우세요\";\n          squatms.push(str);\n        } \n        else if(cmp < -10){\n          str = \"상체를 조금 더 굽히세요\";\n          squatms.push(str);\n        } \n        cmp = trainerAngle[0][\"6\"] - userAngle[0].angle[6]; //스쿼트 무릎 계산\n        if(cmp > 10){\n          str = \"엉덩이를 조금 더 드세요\";\n          squatms.push(str);\n        }\n        else if(cmp < -10){\n          str = \"엉덩이를 조금 더 내리세요\";\n          squatms.push(str);\n        }\n      }\n      if(userAngle[1].angle[6] == 0){\n        str = \"운동을 진행해주세요\";\n        lungeLms.push(str);\n      } else {\n          //사이드 런지 왼쪽\n        cmp = (360-trainerAngle[1][\"6\"]) - (360-userAngle[1].angle[6]);  //런지 왼쪽 무릎\n        if(cmp < -10){\n          str = \"왼쪽 무릎을 조금 더 굽히세요\";\n          lungeLms.push(str);\n        } \n        cmp = (360-trainerAngle[1][\"7\"]) - (360-userAngle[1].angle[7]);   /// 런지 오른쪽 무릎\n        if(cmp > 10 || cmp < -10){\n          str = \"오른쪽 무릎을 조금 더 피세요\";\n          lungeLms.push(str);\n        }\n      }\n      if(userAngle[2].angle[6] == 0){\n        str = \"운동을 진행해주세요\";\n        lungeRms.push(str);\n      } else {\n        //사이드 런지 오른쪽\n        cmp = (360-trainerAngle[2][\"6\"]) - (360-userAngle[2].angle[6]);  //런지 왼쪽 무릎\n        if(cmp > 10 || cmp < -10){\n          str = \"왼쪽 무릎을 조금 더 피세요\";\n          lungeRms.push(str);\n        }\n        cmp = (360-trainerAngle[2][\"7\"]) - (360-userAngle[2].angle[7]);   //런지 오른쪽 무릎\n        console.log(cmp);\n        if(cmp < -10){\n          str = \"오른쪽 무릎을 조금 더 굽히세요\";\n          lungeRms.push(str);\n        }\n      }\n      if(userAngle[3].angle[3] == 360){\n        str = \"운동을 진행해주세요\";\n        pressms.push(str);\n      } else {\n        //숄더 프레스\n        cmp = trainerAngle[3][\"3\"] - userAngle[3].angle[3];  //프레스 오른쪽 겨드랑이\n        if(cmp > 10){\n          str = \"오른쪽 팔을 더 올리세요\";\n          pressms.push(str);\n        }\n        cmp = trainerAngle[3][\"2\"] - userAngle[3].angle[2];  //프레스 왼쪽 겨드랑이\n        if(cmp > 10){\n          str = \"왼쪽 팔을 더 올리세요\";\n          pressms.push(str);\n        }\n        cmp = (360-trainerAngle[3][\"5\"]) - (360-userAngle[3].angle[5]);   //프레스 오른쪽 팔꿈치\n        if(cmp > 10){\n          str = \"오른쪽 팔을 더 피세요\";\n          pressms.push(str);\n        }\n        cmp = (360-trainerAngle[3][\"4\"]) - (360-userAngle[3].angle[4]);   //프레스 왼쪽 팔꿈치\n        if(cmp > 10){\n          str = \"왼쪽 팔을 더 피세요\";\n          pressms.push(str);\n        }\n      }\n      if(userAngle[4].angle[1] == 360){\n        str = \"운동을 진행해주세요\";\n        treems.push(str);\n      } else {\n        //나무 자세\n        cmp = trainerAngle[4][\"1\"] - userAngle[4].angle[1];   //나무자세 오른쪽 허리\n        if(cmp < -10){\n          str = \"오른쪽 다리를 더 올리세요\";\n          treems.push(str);\n        }\n        cmp = (360-trainerAngle[4][\"7\"]) - (360-userAngle[4].angle[7]);   //나무자세 오른쪽 무릎  \n        if(cmp < -10){\n          str = \"오른쪽 무릎을 위로 더 굽히세요\";\n          treems.push(str);\n        }\n      }\n      \n      mistakes[0].squat = squatms;\n      mistakes[0].lungeL = lungeLms;\n      mistakes[0].lungeR = lungeRms;\n      mistakes[0].press = pressms;\n      mistakes[0].tree = treems;\n      setResult(mistakes);\n      setTimeout(()=> {\n        setShowResults(true);\n      }, 3000);\n    }\n\n    useEffect(() => {\n        console.log(analysis);\n        fetch(`https://smlistener.s3.ap-northeast-2.amazonaws.com/json/new_trainer_angle.json`)\n        .then(results => results.json())\n        .then(json => {\n           setTrainer(json);\n           setLoading(true);\n        })\n        \n    }, [])   \n    \n    useEffect(() => {\n      if(loading){\n        analysis.map(exer => {\n          angle(exer);\n        });\n        \n      }\n    }, [loading])\n\n    \n  return (\n    <>\n    {showResults && <Wrapper1> \n      <Spacer/>\n      <Animated><ExerciseResult mistakes = { result }/> </Animated>\n    </Wrapper1>}\n    {!showResults &&<Wrapper2>\n      <Loading>\n         <LoadingBar done={100}/>\n      </Loading>\n      </Wrapper2>}  \n      </>\n  )\n};\n\n\nexport default Check;","export default __webpack_public_path__ + \"static/media/squat.97b13885.gif\";","export default __webpack_public_path__ + \"static/media/lunge.52c35eea.gif\";","export default __webpack_public_path__ + \"static/media/shoulderpress.cfc1a829.gif\";","export default __webpack_public_path__ + \"static/media/tree.b945f017.png\";","import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\n\nconst Wrapper = styled(Responsive)`\nvertical-align : middle;\n`;\n\nconst ExerCard = styled.div`\n  display : inline-block;\n`;\n\nconst FirstExer = () => {\n\n    const useStyles = makeStyles({\n        root: {\n          maxWidth: '370px', \n          height: '100px',\n          width : \"170px\",\n          boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\",\n          display : 'inline-block'\n          \n        },\n        title: {\n          fontSize: 15,\n          marginBottom : '10px',\n        },\n        arrow: {\n            display : 'inline-block',\n            marginBottom : \"100px\",\n            marginLeft : \"30px\",\n            marginRight : \"30px\",\n            color : \"#1971c2\"\n        }\n      });\n\n      const classes = useStyles();\n\n\n        return (\n            <>\n            <Wrapper>\n                <ExerCard>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        STEP 1\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        스쿼트\n                    </Typography>\n                </CardContent>\n            </Card>\n            <ArrowForwardIosIcon className={classes.arrow}/>\n            </ExerCard>\n            <ExerCard>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        STEP 2\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        런지\n                    </Typography>\n                </CardContent>\n            </Card>\n            <ArrowForwardIosIcon className={classes.arrow}/>\n            </ExerCard>\n            <ExerCard>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        STEP 3\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        숄더프레스\n                    </Typography>\n                </CardContent>\n            </Card>\n            <ArrowForwardIosIcon className={classes.arrow}/>\n            </ExerCard>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        STEP 4\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        나무자세\n                    </Typography>\n                </CardContent>\n            </Card>\n            </Wrapper>\n            </>\n    );\n\n}\n\nexport default FirstExer;","import React, { useEffect, useState } from 'react';\nimport {Animated} from \"react-animated-css\";\nimport styled from 'styled-components';\nimport image1 from '../../img/squat.gif';\nimport image2 from '../../img/lunge.gif';\nimport image3 from '../../img/shoulderpress.gif';\nimport image4 from '../../img/tree.png';\nimport './First.css';\nimport Button from '../../components/common/Button';\nimport palette from '../../lib/style/palette';\nimport Responsive from '../../components/common/Responsive';\nimport FirstExer from '../../components/exercises/FirstExer';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nconst Hello = styled(Responsive)`\n    text-align : center;\n    \n`;\nconst Wrapper1 = styled.div`\nfont-size : 16px;\nmargin : 0 auto;\nheight: 600px;\n@media (max-width: 768px) {\n    height : 750px;\n};\n@media (max-width: 500px) {\n    height : 850px;\n};\n`;\n\nconst Wrapper2 = styled.div`\nfont-size : 16px;\nmargin : 0 auto;\nheight: 630px;\n`;\n\n\nconst Spacer = styled.div`\n  height: 4rem;\n  `;\n\n  const StyledButtonPre = styled(Button)`\n  background: ${palette.gray[6]};\n  &:hover {\n    background: ${palette.gray[5]};\n  }\n    font-size : 0.8rem;\n    margin-right: 24rem;\n    display : inline-block;\n    padding-left : 5px;\n    @media (max-width: 1100px) {\n        margin-right: 8rem;\n    };\n    @media (max-width: 500px) {\n        margin-right: 1rem;\n    };\n`;\nconst StyledButtonNext = styled(Button)`\nbackground: ${palette.gray[6]};\n&:hover {\n  background: ${palette.gray[5]};\n}\n  font-size : 0.8rem;\n  margin-left: 24rem;\n  display : inline-block;\n  padding-right : 5px;\n  @media (max-width: 1100px) {\n      margin-left: 8rem;\n  };\n  @media (max-width: 500px) {\n    margin-left: 1rem;\n};\n`;\nconst Order = styled.div`\n@media screen (max-width: 768px) {\n  align-items : center;\n};\n`\nconst First = ({setSquatCount, setLungeCount, setShoulderCount}) => {\n       const [timeover, setTimeover] = useState(false);\n       const [visible1, setVisible1] = useState(true);\n       const [visible2, setVisible2] = useState(true);\n       const [exerciseEx, setExerciseEx] = useState(false);\n       const [pose, setPose] = useState(0);\n       const styleExplain = {\n        fontSize : \"1.3rem\",\n        textAlign : \"center\"\n    };\n       let time1=0;\n       let menus = [\"안녕하세요\", \"운동을 시작해보겠습니다.\", \"우리가 할 운동은 다음과 같이 4가지 입니다.\"];\n        let menuList = menus.map((menu) => {\n            return <Animated \n                    animationIn=\"fadeIn\" \n                    animationInDelay={1000} \n                    animationOut=\"fadeOut\" \n                    animationOutDelay={1000} \n                    isVisible={visible1}\n                    style = {styleExplain}>{menu}</Animated>\n        });\n    \n     useEffect(() => {\n        setTimeout(function() {\n            setVisible1(false);\n        }, 4000);\n        setTimeout(function() {\n            setTimeover(true);\n        }, 6000);\n     }, []);\n\n     const nextPose = () => {\n        if (pose === 0)\n            setPose(1);\n        else if (pose === 1)\n            setPose(2);\n        else if (pose === 2)\n            setPose(3);\n        else\n            setPose(0);\n     };\n     const prePose = () => {\n         if (pose === 1)\n            setPose(0);\n        else if (pose === 2)\n            setPose(1);\n        else if (pose === 3)\n            setPose(2);\n        else\n            setPose(3);\n     }\n     const showExer = () => {\n         setVisible2(false);\n         setTimeout(function() {\n            setExerciseEx(true);\n         }, 3000);\n     }\n     const setSCount = (e) => {\n         setSquatCount(e.target.value);\n     }\n     const setLCount = (e) => {\n        setLungeCount(e.target.value);\n     }\n     const setShCount = (e) => {\n         setShoulderCount(e.target.value);\n     }\n    \n    return (\n        <>\n        {!timeover &&\n         <Wrapper1>\n         <Spacer/><Spacer/>\n         <Hello>{menuList}\n         <Spacer/>\n             <Animated\n                 animationIn=\"fadeIn\"\n                 animationInDelay={2000}\n                 animationOut=\"fadeOut\"\n                 animationOutDelay={1000}\n                 isVisible={visible1}\n             >\n                 <FirstExer/>\n             </Animated>\n         </Hello>\n     </Wrapper1>}\n        {( timeover && !exerciseEx ) &&\n        <Wrapper2>\n            <div id=\"hello\">\n                <Spacer/>\n                <Animated animationIn=\"fadeIn\" animationInDelay={1000} animationOut=\"fadeOut\" animationOutDelay={500} isVisible={visible2}>\n                <div className=\"inputWrapper\">\n                <div id=\"setCount\">먼저 각 운동별 목표 개수를 입력해주세요.<br/>운동 준비가 되었다면 시작버튼을,<br/>운동 자세를 보시려면 운동자세 보기를 눌러주세요.</div>\n                    <table id=\"inputCount\">\n                        <tr id=\"squat\">\n                            <td>\n                            스쿼트\n                            </td>\n                            <td>\n                            <input className=\"inputBox\" type=\"number\" onChange={setSCount} placeholder=\"15\"/>\n                            </td>\n                            <div className=\"recomend\" id=\"squEx\">스쿼트는 10~15회씩 3~5set를 기본으로 합니다. 처음이시라면 10회부터 시작하여 천천히 늘려보세요.</div>\n                        </tr>\n                        <tr id=\"lunge\">\n                            <td>\n                            런지\n                            </td>\n                            <td>\n                            <input className=\"inputBox\" type=\"number\" onChange={setLCount} placeholder=\"15\"/>\n                            </td>\n                            <div className=\"recomend\" id=\"lunEx\">런지는 한 쪽 다리에 10~15회씩 3~5set를 기본으로 합니다. 처음이시라면 10회부터 시작하여 천천히 늘려보세요.</div>\n                        </tr>\n                        <tr id=\"press\">\n                            <td>\n                            숄더프레스\n                            </td>\n                            <td>\n                            <input className=\"inputBox\" type=\"number\" onChange={setShCount} placeholder=\"15\"/>\n                            </td>\n                            <div className=\"recomend\" id=\"preEx\">숄더프레스는 6~15회씩 4set를 기본으로 합니다. 자신에게 알맞은 무게의 덤벨을 이용하면 더 큰 운동 효과를 볼 수 있습니다. 가벼운 무게부터 시작하여 천천히 중량을 늘려보세요.</div>\n                        </tr>\n                    </table>\n                    <div id=\"showExer\" onClick={showExer}>운동자세 보기</div>\n                    </div>\n                </Animated>\n            </div>\n        </Wrapper2>}\n        {exerciseEx && \n        <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n            <Spacer/>\n        <div className=\"ex\">\n                {(pose === 0) && <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n                <div id=\"pose\">SQUAT</div>\n                <img id=\"image\" src={image1}/>\n                <span id=\"posetext\">\n                    <ol>\n                        <li>카메라를 바라보는 방향을 기준으로 오른쪽으로 몸을 돌리고 섭니다.</li>\n                        <li>두 손은 모은 상태를 유지합니다.</li>\n                        <li>양발의 간격은 골반보다 조금 더 넓게 유지하고, 양발 끝은 바깥쪽으로 15도~20도 정도 벌려줍니다.</li>\n                        <li>상체는 그대로 꼿꼿이 유지하면서 천천히 엉덩이를 뒤로 빼며 무릎을 굽혀 앉는 자세를 취합니다.</li>\n                        <li>허벅지가 바닥과 평행이 되면 천천히 준비자세로 돌아옵니다.</li>\n                    </ol>\n                </span>\n                </Animated>}\n                {(pose === 1) && <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n                <div id=\"pose\">SIDE LUNGE</div>\n                <img id=\"image\" src={image2}/>\n                <span id=\"posetext\">\n                    <ol>\n                        <li>카메라를 바라보는 방향으로 섭니다.</li>\n                        <li>두 손은 모은 상태를 유지합니다.</li>\n                        <li>양발의 간격이 어깨의 2배정도 되도록 벌려줍니다.</li>\n                        <li>한쪽 방향으로 몸을 옮겨 체중을 실어주며 옮기는 쪽 다리에 대부분의 힘을 준 상태로 허리는 꼿꼿이 펴고 엉덩이를 뒤로 빼며 체중을 실은 쪽의 무릎을 굽혀줍니다.</li>\n                        <li>굽힌 쪽의 허벅지가 바닥과 평행이 되면 천천히 준비자세로 돌아옵니다.</li>\n                    </ol>\n                </span>\n                </Animated>}\n                {(pose === 2) && <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n                <div id=\"pose\">SHOULDER PRESS</div>\n                <img id=\"image\" src={image3}/>\n                <span id=\"posetext\">\n                    <ol>\n                        <li>카메라를 바라보는 방향으로 섭니다.</li>\n                        <li>양발의 간격은 어깨너비로 벌립니다.</li>\n                        <li>허리는 꼿꼿이 핀 상태를 유지합니다.</li>\n                        <li>어깨 좌우 대칭을 유지하고, 손목과 팔꿈치가 일자를 이루도록 하며 팔을 완전히 위쪽으로 펴줍니다.</li>\n                        <li>천천히 준비자세로 돌아옵니다.</li>\n                    </ol>\n                </span>\n                </Animated>}\n                {(pose === 3) && <Animated animationIn=\"fadeIn\" animationInDelay={500}>\n                <div id=\"pose\">TREE POSE</div>\n                <img id=\"image\" src={image4}/>\n                <span id=\"posetext\">\n                    <ol>\n                        <li>카메라를 바라보는 방향으로 섭니다.</li>\n                        <li>오른쪽 다리를 구부려 들어올립니다.</li>\n                        <li>구부린 다리를 옆으로 열어 골반을 열어줍니다.</li>\n                        <li>구부린 다리를 손으로 잡아 반대 쪽 다리의 허벅지 옆면에 붙여줍니다.</li>\n                        <li>몸의 균형을 잡고 천천히 양 손을 가슴 앞에 모아주어 자세를 유지합니다.</li>\n                    </ol>\n                </span>\n                </Animated>}\n                <Order>\n                    {exerciseEx && <StyledButtonPre onClick={prePose}><NavigateBeforeIcon/>이전 운동</StyledButtonPre>}\n                    {exerciseEx && <StyledButtonNext onClick={nextPose}>다음 운동<NavigateNextIcon/></StyledButtonNext>}\n                </Order>              \n        </div>\n        </Animated>}\n        </>\n    );\n};\nexport default First;","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n    createRequestActionTypes\n  } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst INITIALIZE = 'exercise/INITIALIZE'; // 모든 내용 초기화\nconst UNLOAD_EXERCISE = 'exercise/UNLOAD_exercise'; //운동 비우기\nconst [\n    WRITE_EXERCISE,\n    WRITE_EXERCISE_SUCCESS,\n    WRITE_EXERCISE_FAILIRE,\n] = createRequestActionTypes('exercise/FIND_EXERCISE'); //운동 찾기\n\nexport const writeExercise = createAction(WRITE_EXERCISE, ({ title, username }) => ({\n    title,\n    username\n  }));\nexport const unloadExercise = createAction(UNLOAD_EXERCISE);\n\nconst writeExerciseSaga = createRequestSaga(WRITE_EXERCISE, authAPI.exercise);\n\nexport function* exerciseSaga(){\n    yield takeLatest(WRITE_EXERCISE, writeExerciseSaga);\n}\n\nconst initialState = {\n    exercise: null,\n    error: null,\n};\n\nconst exercise = handleActions(\n    {\n        [INITIALIZE]: state => initialState,\n        [WRITE_EXERCISE]: state=>({\n            ...state,\n            exercise: null,\n            error: null,\n        }),\n        [WRITE_EXERCISE_SUCCESS]: (state, { payload: exercise}) => ({\n            ...state,\n            exercise,\n        }),\n        [WRITE_EXERCISE_FAILIRE]: (state, { payload: error}) => ({\n            ...state,\n            error,\n        }),\n        [UNLOAD_EXERCISE]: () => initialState,\n    },\n    initialState,\n);\n\nexport default exercise;","import React, { useState, useEffect } from 'react';\nimport Test from '../../components/exercises/Test';\nimport styled from 'styled-components';\nimport Button from '../../components/common/Button';\nimport palette from '../../lib/style/palette';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Check from '../../components/exercises/Check';\nimport First from './First';\nimport { writeExercise } from '../../modules/exercise';\nimport { updateTotalTime, updateLevel } from '../../modules/auth';\nimport './ExerciseContainer.css';\n\n//import squat from './image/squat';\nconst Wrapper = styled.div`\n  text-align: center;\n`;\nconst ButtonWrapper = styled.div`\n  position:flex;\n  bottom: 0;\n  margin-top : 50px;\n  text-align : center;\n  @media (max-width: 768px) {\n    margin-top : 100px;\n  }\n`;\n\nconst StyledButton2 = styled(Button)`\n  background: ${palette.gray[7]};\n  &:hover {\n    background: ${palette.gray[5]};\n  }\n`;\nconst StyledButton = styled(Button)`\n  background: ${palette.gray[7]};\n  &:hover {\n    background: ${palette.gray[5]};\n  }\n  position:absolute;\n  bottom: -3%; left:50%;\n  transform: translate(-50%, -50%);\n`;\nconst Spacer = styled.div`\n  height: 3.5rem;\n  `;\n\nconst Text = styled.div`\n  display: block;\n  width: 100%;\n  text-align: center;\n`;\n\nconst Ec = styled.div`\nposition: relative;\n}\n`;\n\nlet analysis = [];\nconst getData = (data) => {\n  analysis = data;\n};   //Test.js 에서 analysis 객체 받아오는 함수\nlet squatCount = 15;\nlet lungeCount = 15;\nlet shoulderCount = 15;\nconst setSquatCount = (squat) => {\n  if (squat === '' || parseInt(squat) === 0)\n    squatCount = 15;\n  else if (squat < 0)\n    squatCount = parseInt(-squat);\n  else\n    squatCount = parseInt(squat);\n}\nconst setLungeCount = (lunge) => {\n  if (lunge === '' || parseInt(lunge) === 0)\n    lungeCount = 15;\n  else if (lunge < 0)\n    lungeCount = parseInt(-lunge);\n  else\n    lungeCount = parseInt(lunge);\n}\nconst setShoulderCount = (shoulder) => {\n  if (shoulder === '' || parseInt(shoulder) === 0)\n    shoulderCount = 15;\n  else if (shoulder < 0)\n    shoulderCount = parseInt(-shoulder);\n  else\n    shoulderCount = parseInt(shoulder);\n}\n\nconst ExerciseContainer = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector(({ user }) => ({\n    user: user.user\n  }));\n  const [showResults, setShowResults] = useState(false);\n  const [first, setFirst] = useState(true);\n  var total = 0;\n  var seconds = 0;\n  var minutes = 0;\n  var time;\n  var msec = 0;\n  var mtime;\n\n\n\n  const videoOff = () => {\n      if (showResults === true) {\n        const video = document.querySelector('video');\n        const mediaStream = video.srcObject;\n        const tracks = mediaStream.getTracks();\n        tracks[0].stop();\n        tracks.forEach(track => track.stop())\n      }\n      setShowResults(false);\n      user.s = total\n      total = total/60;\n      user.t = Number(total.toFixed(2));\n      const username = user.username;\n      const totaltime = Number((user.t + user.totalTime).toFixed(2));\n      let newlevel = '🌱';\n      dispatch(writeExercise({title: user.t, username : username}));\n\n      if (totaltime < 420) \n        newlevel = '🌱';\n      else if (totaltime >= 420 && totaltime < 840)\n        newlevel = '🐣';\n      else if (totaltime >= 840 && totaltime < 1260)\n        newlevel = '👶';\n      else if (totaltime >= 1260 && totaltime < 1680)\n        newlevel = '🏋';\n      else if (totaltime >= 1680 && totaltime < 2100)\n        newlevel = '💪';\n      else if (totaltime >= 2100 && totaltime < 2520)\n        newlevel = '👿';\n      else\n        newlevel = '🦍';\n\n      dispatch(updateTotalTime({ username : username, totalTime :totaltime, level : newlevel}));\n  };\n  const videoOn = () => {\n    setShowResults(true);\n    setFirst(false);\n  };\n  const linkTo = () => {\n    document.location.href = \"/main\";\n  }\n\n\n  useEffect(() => {\n    if (showResults) {\n      setTimeout(function() {\n        document.getElementById('minutes_10').innerHTML = 0;\n          document.getElementById('minutes_1').innerHTML = 0;\n          document.getElementById('seconds_10').innerHTML = 0;\n          document.getElementById('seconds_1').innerHTML = 0;\n        time = setInterval(() => {\n          total++;\n          minutes = parseInt(total/60);\n          document.getElementById('minutes_10').innerHTML = parseInt(minutes/10);\n          document.getElementById('minutes_1').innerHTML = minutes%10;\n          seconds = parseInt(total%60);\n          document.getElementById('seconds_10').innerHTML = parseInt(seconds/10);\n          document.getElementById('seconds_1').innerHTML = seconds%10;\n        }, 1000);\n      }, 5000);\n    }\n    return () => clearInterval(time); \n  });\n\n  useEffect(() => {\n    if (showResults) {\n      setTimeout(function(){\n        mtime = setInterval(() => {\n          msec++;\n          if (msec === 10)\n            msec = 0;\n          document.getElementById('msec').innerHTML = msec;\n        }, 100);\n      }, 5000);\n    }\n    return () => clearInterval(mtime);\n  });\n\n  useEffect(() => {\n    if (showResults === true) {\n      setTimeout(function() {\n        document.getElementById('ready').innerHTML = 'Ready?';\n      }, 1500);\n      setTimeout(function() {\n        document.getElementById('ready').innerHTML = 'Start!';\n      }, 3500);\n      setTimeout(function() {\n        document.getElementById('ready').style.visibility=\"hidden\";\n        document.getElementById('endbutton').style.visibility=\"visible\";\n      }, 5000);\n    }\n  });\n\n  return (\n    <>\n    <Ec>\n    {first && <div><First setSquatCount={setSquatCount} setLungeCount={setLungeCount} setShoulderCount={setShoulderCount}/><Spacer/><StyledButton onClick={videoOn}>시작</StyledButton></div>}\n      {showResults && \n      <Wrapper>\n        <Spacer/>\n        <div id=\"watch\">\n          <div id=\"button\"></div>\n          <div id=\"strap_top\"></div>\n          <div id=\"watch_body\">\n          <div id=\"minutes_10\"></div><div id=\"minutes_1\"></div>\n          <div id=\"seconds_10\"></div><div id=\"seconds_1\"></div>\n          <div id=\"msec\"></div>\n          <div id=\"ready\"></div>\n          </div>\n          <div id=\"strap_bottom\"></div>\n        </div>\n        <Test getData = {getData} squatCount={squatCount} lungeCount={lungeCount} shoulderCount={shoulderCount}/><Spacer/><div id=\"endbutton\"><StyledButton onClick={videoOff}>종료</StyledButton></div>\n      </Wrapper>}\n      {(!first && !showResults) &&\n      <div>\n        <Check analysis={analysis} style ={{height : \"auto\"}}/>\n        <ButtonWrapper><StyledButton2 onClick={videoOn}>다시시작</StyledButton2> <StyledButton2 onClick={linkTo}>끝내기</StyledButton2></ButtonWrapper>\n      </div>}\n    </Ec>\n    </>\n  ) \n};\nexport default ExerciseContainer;","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport { Helmet } from 'react-helmet-async';\nimport ExerciseContainer from '../containers/exercise/ExerciseContainer';\nimport FooterContainer from '../containers/common/FooterContainer';\nimport styled  from 'styled-components';\n\nconst Background = styled.div`\nbackground: linear-gradient(120deg, #d8e2ed 33%, #f5f5f5 33%);\n`;\n\nconst TodayTr = () => {\n    return (\n        <>\n        <Helmet>\n            <title>Today</title>\n        </Helmet>\n        <Background>\n        <HeaderContainer/>\n        <NavContainer/>\n        <ExerciseContainer style = {{overflowX : \"hidden\"}}/>\n        <FooterContainer />\n        </Background>\n        </>\n    );\n};\n\nexport default TodayTr;","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport styled from \"styled-components\";\nimport { useSelector } from 'react-redux';\nimport palette from '../../lib/style/palette';\n\nconst MyDiv = styled.div`\n  display: inline-block;\n  width : 100%;\n  height : 100%;\n  text-align: center;\n`;\nconst Level = styled.div`\n  display:inline;\n  text-align:center;\n  font-size:1.5rem;\n  font-weight: bold;\n  color : ${palette.gray[8]};\n`;\n\nconst MyPageChart = () => {\n    const user = useSelector(({ user }) => ({ user: user.user }));\n    let data = {\n      datasets: [\n        {\n          data: [10, 20],\n          backgroundColor: [\n            \"rgb(110,198,221)\",\n            \n          ],\n          borderColor: [\n            \"rgb(110,198,221)\",\n            \n          ],\n          borderWidth: 0.3,\n          weight : 0.3\n        }\n      ]\n  };\n    let val = 1, lefttime = 0, num = 0;\n    const time = user.user.totalTime;\n    lefttime = 420-time;\n    if(time > 420 && time <= 840){   \n      val = 2;\n      lefttime = 840-time;\n    } else if(time> 840 && time <= 1260){\n      val = 3;\n      lefttime = 1260-time;\n    } else if(time > 1260 && time <= 1680){\n      val = 4;\n      lefttime = 1680-time;\n    } else if(time > 1680 && time <= 2100){\n      val = 5;\n      lefttime = 2100-time;\n    } else if(time > 2100 && time <= 2520){\n      val = 6;\n      lefttime = 2520-time;\n    } else if(time > 2520){\n      val = 7;\n      lefttime = 0;\n    }\n    if(val != 7){    \n      data.datasets[0].data[0]=(time/(420 * val)) * 100;\n      data.datasets[0].data[1]=100-((time/(420 * val)) * 100);\n      num = Math.floor(data.datasets[0].data[0]);\n    } else if(val == 7){\n      data.datasets[0].data[1] = 0;\n      num = \"MAX\"\n    }\n    const text = \"현재 경험치 \"; \n    \n    return (\n        <MyDiv>\n          <Doughnut data={data}/>\n          <br/>\n          <div style={{paddingBottom: '5%'}}>  \n            <Level>{text}\n            <Level style={{color:'#6ec6dd'}}>{num}</Level> %</Level>\n            <br/>\n            {lefttime>0 && <Level style={{fontSize: '1.2em'}}>다음 레벨 승급까지   \n            <Level style={{fontSize: '1.2em', color: '#6ec6dd'}}> {lefttime}</Level> 분 남았습니다.</Level>}\n          </div>\n        </MyDiv>\n      );\n};\n  \n  export default MyPageChart;","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { useSelector } from 'react-redux';\n\nconst MonthExer = () => {\n\n    let jan = 0, feb = 0, mar = 0, apr = 0, may = 0, jun = 0, jul = 0, aug = 0, sep = 0, oct = 0, nov = 0, dec = 0;\n    const user = useSelector(({user}) => ({\n        user: user.user\n    }));\n    const exercises = user.user.exercises;\n    const date = [];\n    if(exercises){\n    const len = exercises.length;\n    //date배열에 달만 뽑아서 저장\n    for(let i = 0 ; i< len; i++) {\n        const exerDate = exercises[i].date;\n        date[i] = exerDate.slice(5,7);\n    }\n\n    for(let i=0; i<len; i++) {\n        switch (date[i]) {\n            case \"01\" :\n                jan += exercises[i].title;\n                break;\n            case \"02\" :\n                feb += exercises[i].title;\n                break;\n            case \"03\" :\n                mar += exercises[i].title;\n                break;\n            case \"04\" :\n                apr += exercises[i].title;\n                break;\n            case \"05\" :\n                may += exercises[i].title;\n                break;\n            case \"06\" :\n                jun += exercises[i].title;\n                break;\n            case \"07\" :\n                jul += exercises[i].title;\n                break;\n            case \"08\" :\n                aug += exercises[i].title;\n                break;\n            case \"09\" :\n                sep += exercises[i].title;\n                break;\n            case \"10\" :\n                oct += exercises[i].title;\n                break;\n            case \"11\" :\n                nov += exercises[i].title;\n                break;\n            case \"12\" :\n                dec += exercises[i].title;\n                break;\n        }\n    };\n}\n\n    let data = {\n        labels: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n        datasets: [{\n            label: '총 운동 시간',\n            data: [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec ],\n            borderWidth: 1,\n            borderColor: \"rgba(110,198,221, 1)\",\n            backgroundColor: \"rgba(110,198,221, 0.3)\",\n            fill: true,\n            lineTension: 0.2\n        }]\n    };\n\n    let options = {\n        maintainAspectRatio: true, // default value. false일 경우 포함된 div의 크기에 맞춰서 그려짐.\n\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:true\n                }\n            }]\n        }\n    };\n\n    return (\n          <Line \n          data = {data}\n          options = {options}/>\n          \n      );\n\n}\n\nexport default MonthExer;","import React, {useState, useEffect} from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer'; \nimport { useSelector} from 'react-redux';\nimport NavContainer from '../components/common/Navbar';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport MyPageChart from '../components/chart/MyPageChart';\nimport { Helmet } from 'react-helmet-async';\nimport FooterContainer from '../containers/common/FooterContainer';\nimport Responsive from '../components/common/Responsive';\nimport Button from '../components/common/Button';\nimport MonthExer from '../components/chart/MonthExer';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Wrapper = styled(Responsive)`\n    display: flex;\n    align-items: center;\n    padding: 10px 5px;\n    span{\n      font-size: 2em;\n      font-weight: bold;\n    }\n    ul{\n      color: #616161;\n      font-size: 1.2em;\n      margin-top: 1em;\n      h2 {\n        color: black;\n      }\n    }\n    @media (max-width: 768px) {\n      span{\n        font-size: 1.5em;\n        font-weight: bold;\n      }\n    }\n   \n`;\n\nconst ChartDiv = styled.div`\n  margin-top: 5%;\n`;\nconst InterDiv = styled.div`\n  margin-left: 12px;\n  margin-top: 5px;\n  color: #616161;\n  float: left;\n`;\nconst useStyles = makeStyles({\n  pc: {\n    minWidth: '100%',\n    maxWidth: '100%',\n    minHeight: '50%',\n    boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\",\n  },\n  mobile: {\n    minWidth: '100%',\n    minHeight: '50%',\n    maxWidth: '100%',\n    marginLeft: '5%',\n    boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\",\n  },\n});\nconst useStyles2 = makeStyles({\n  pc: {\n    minWidth: '100%',\n    minHeight: '100%',\n    boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\",\n  },\n  mobile: {\n    minWidth: '100%',\n    minHeight: '100%',\n    marginLeft: '5%',\n    boxShadow: \"1px 6px 6px 1px rgba(0, 0, 0, 0.2)\", \n  }\n});\nconst MyPage = ({match}) => {\n  const [str, setStr] = useState('헬스 새싹');\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\n  const classes = useStyles();\n  const charclasses = useStyles2();\n  const matches = useMediaQuery('(max-width:768px)');\n  const imgKey = matches ? 'mobile' : 'pc';\n  const space = matches ? 11 : 6;  \n  const monthspace = matches ? 11 : 12;\n  console.log(imgKey);\n  useEffect(() => {\n    let lv = user.level;   \n    if(lv == '🐣') setStr('헬스 병아리');\n    else if(lv == '👶') setStr('헬린이');\n    else if(lv == '🏋')  setStr('헬스 홀릭');\n    else if(lv == '💪')  setStr('헬스 전문가');\n    else if(lv == '👿')  setStr('PT 쌤');\n    else if(lv == '🦍')  setStr('측정 불가');\n  }, [user]);   \n\n  return(\n    <>\n    <Helmet>\n      <title>My Page</title>  \n    </Helmet>\n    <HeaderContainer />\n    <NavContainer />\n    <br/><br/><br/>\n\n    <Wrapper>\n      <Grid container spacing={3}>\n       <Grid item xs = {space} >\n        <Card className={classes[imgKey]} variant=\"outlined\">\n          <InterDiv>\n            <i class=\"fas fa-running fa-2x\"></i>\n            <span> level</span> \n          </InterDiv>\n          <MyPageChart/>\n        </Card>\n        </Grid>\n        <Grid item xs = {space}>\n        <Card className={classes[imgKey]} variant=\"outlined\">\n          <InterDiv>\n            <i class=\"fas fa-user fa-2x\"></i>\n            <span> Info</span> \n          </InterDiv> \n          <br/><br/>\n          <ul>\n            <li>닉네임 <h2>{user.username}</h2></li>\n            <li>레벨 <h2>{user.level} {str}</h2></li>\n            <li>총 운동 시간 <h2>{user.totalTime} 분</h2></li>\n          </ul>\n          <div style={{float: 'right', padding: '5%'}}>       \n          <Link to={`/modify/${user._id}`} style={{color: 'black', textDecoration: 'none'}}>\n              <Button>회원 정보 수정</Button>\n          </Link>\n          </div>\n        </Card>\n        </Grid>\n        <Grid item xs = {monthspace} >\n        <Card className = {charclasses[imgKey]} variant=\"outlined\">\n          <InterDiv>\n            <i class=\"fas fa-chart-line fa-2x\"></i>\n            <span> Monthly Statistics</span> \n          </InterDiv>\n          <ChartDiv>\n            <MonthExer />\n          </ChartDiv>\n        </Card>\n        </Grid>\n        </Grid>\n    </Wrapper>\n    \n    <FooterContainer />\n    </>\n  );\n};\n\nexport default MyPage;","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Button from '../common/Button';\nimport { useSelector } from 'react-redux';\n/**\n * 회원가입 또는 로그인 폼을 보여줍니다.\n */\nconst AuthFormBlock = styled.div`\n  h3 {\n    margin: 0;\n    color: ${palette.gray[8]};\n    margin-bottom: 1rem;\n    text-align : center;\n    font-style : bold;\n  }\n`;\n/**\n * 스타일링된 input\n */\nconst StyledInput = styled.input`\n  font-size: 1rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[5]};\n  padding-bottom: 0.5rem;\n  outline: none;\n  width: 100%;\n  &:focus {\n    color: $oc-teal-7;\n    border-bottom: 1px solid ${palette.gray[7]};\n  }\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n/**\n * 폼 하단에 로그인 혹은 회원가입 링크를 보여줌\n */\nconst ButtonWithMarginTop = styled(Button)`\n  margin-top: 1rem;\n`;\nconst ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  font-size: 0.875rem;\n  margin-top: 1rem;\n`;\n\nconst ModifyAuthForm = ({form, onChange, onSubmit, error }) => {\n    const text = '비밀번호 변경';\n    const { user } = useSelector(({ user }) => ({ user: user.user }));\n  return (\n    <AuthFormBlock>\n      <h3>{text}</h3>\n      <form onSubmit={onSubmit}>\n        <StyledInput\n          autoComplete=\"username\"\n          name=\"username\"\n          placeholder=\"아이디\"\n          onChange={onChange}\n          value={ user ? user.username : ' ' }\n        />\n        <StyledInput\n          autoComplete=\"new-password\"\n          name=\"password\"\n          placeholder=\"비밀번호\"\n          type=\"password\"\n          onChange={onChange}\n          value={form.password}\n        />\n          <StyledInput\n            autoComplete=\"new-password\"\n            name=\"passwordConfirm\"\n            placeholder=\"비밀번호 확인\"\n            type=\"password\"\n            onChange={onChange}\n            value={form.passwordConfirm}\n          />\n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        <ButtonWithMarginTop fullWidth>\n            {text}\n        </ButtonWithMarginTop>\n      </form>\n    </AuthFormBlock>\n  );\n};\nexport default ModifyAuthForm;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, modify } from '../../modules/auth';\nimport ModifyAuthForm from '../../components/auth/ModifyAuthForm';\nimport { logout } from '../../modules/user';\n\nconst ModifyForm = ({history}) => {\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const { form, user } = useSelector(({ auth, user }) => ({\n      form: auth.modify,\n      user: user.user\n    }));\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n      const { value, name } = e.target;\n      dispatch(\n        changeField({\n          form: 'modify',\n          key: name,\n          value,\n        }),\n      );\n    };\n\n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n      e.preventDefault();\n      const {password, passwordConfirm} = form;\n      const username = user.username;\n      if([password, passwordConfirm].includes('')) {\n        setError('빈 칸을 모두 입력하세요.');\n        return;\n      }\n        // 비밀번호가 일치하지 않는다면\n        if (password !== passwordConfirm) {\n        setError('비밀번호가 일치하지 않습니다.');\n        dispatch(changeField({ form: 'modify', key: 'password', value: '' }));\n        dispatch(\n          changeField({ form: 'modify', key: 'passwordConfirm', value: '' }),\n        );\n        return;\n      }\n      dispatch(modify({ username, password }));\n      dispatch(logout());\n    };\n\n    // 컴포넌트가 처음 렌더링 될 때 form 을 초기화함\n    useEffect(() => {\n      dispatch(initializeForm('modify'));\n    }, [dispatch]);\n  \n    useEffect(() => {\n      if (!user) {\n        console.log('변경 성공');\n        alert('비밀번호가 변경되었습니다. 다시 로그인해주세요.');\n        history.push('/');\n      }\n      }, [history, user]);\n\n    return (\n      <ModifyAuthForm\n        type=\"modify\"\n        form={form}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    );\n  };\n\n  export default withRouter(ModifyForm);","import React from 'react';\nimport AuthTemplate from '../components/auth/AuthTemplate';\nimport ModifyForm from '../containers/auth/ModifyForm';\n\nconst Modify = () => {\n    return (\n        <AuthTemplate>\n            <ModifyForm/>\n        </AuthTemplate>    \n    );\n};\n\nexport default Modify;","import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  READ_POST,\n  READ_POST_SUCCESS,\n  READ_POST_FAILURE,\n] = createRequestActionTypes('post/READ_POST');\n\nconst [\n  WRITE_COMMENT,\n  WRITE_COMMENT_SUCCESS,\n  WRITE_COMMENT_FAILURE,\n] = createRequestActionTypes('comment/WRITE_COMMENT');\n\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 페이지에서 벗어날 때 데이터 비우기\n\nexport const readPost = createAction(READ_POST, id => id);\nexport const unloadPost = createAction(UNLOAD_POST);\nexport const writeComment = createAction(WRITE_COMMENT, ({ text, username, id }) => ({\n  text,\n  username,\n  id,\n}));\nconst readPostSaga = createRequestSaga(READ_POST, postsAPI.readPost);\nconst writeCommentSaga = createRequestSaga(WRITE_COMMENT, postsAPI.comment);\n\nexport function* postSaga() {\n  yield takeLatest(READ_POST, readPostSaga);\n  yield takeLatest(WRITE_COMMENT, writeCommentSaga);\n}\n\nconst initialState = {\n  post: null,\n  error: null,\n};\n\nconst post = handleActions(\n  {\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    [READ_POST_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n    [WRITE_COMMENT]: state => ({\n      ...state,\n      error: null,\n    }),\n    // 포스트 작성 성공\n    [WRITE_COMMENT_SUCCESS]: (state, { payload: post }) => ({\n      ...state,\n      post,\n    }),\n    // 댓글 작성 실패\n    [WRITE_COMMENT_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),  \n    [UNLOAD_POST]: () => initialState,\n  },\n  initialState,\n);\n\nexport default post;","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Responsive from '../common/Responsive';\nimport SubInfo from '../common/SubInfo';\n\nconst PostViewerBlock = styled(Responsive)`\n  margin-top: 4rem;\n`;\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  margin-top: 5em;\n  h1 {\n    font-size: 2.5rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\n\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n`;\n\nconst PostViewer = ({ post, error, levels, loading, actionButtons }) => {\n\n  if(error) {\n        if(error.response && error.response.status === 404){\n            return <PostViewerBlock>존재하지 않는 포스트입니다.</PostViewerBlock>;\n        }\n        return <PostViewerBlock>오류 발생!</PostViewerBlock>;\n    }\n    // 로딩중이거나, 아직 포스트 데이터가 없을 시\n    if (loading || !post) {\n        return null;\n    }\n    const { title, body, user, publishedDate } = post;\n  if(!levels){\n    return null;\n  }\n  return (\n    <PostViewerBlock>\n      <PostHead>\n        <h1>{title}</h1>\n        <SubInfo \n            username = {user.username}\n            userlevel = {levels.level}\n            publishedDate = {publishedDate}\n            hasMarginTop\n        />\n      </PostHead>\n      {actionButtons}\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\n    </PostViewerBlock>\n  );\n};\n\nexport default PostViewer;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\n\nconst Fullscreen = styled.div`\n  position: fixed;\n  z-index: 30;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst AskModalBlock = styled.div`\n  width: 320px;\n  background: white;\n  padding: 1.5rem;\n  border-radius: 4px;\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.125);\n  h2 {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n  p {\n    margin-bottom: 3rem;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  height: 2rem;\n  & + & {\n    margin-left: 0.75rem;\n  }\n`;\n\nconst AskModal = ({\n  visible,\n  title,\n  description,\n  confirmText = '확인',\n  cancelText = '취소',\n  onConfirm,\n  onCancel,\n}) => {\n  if (!visible) return null;\n  return (\n    <Fullscreen>\n      <AskModalBlock>\n        <h2>{title}</h2>\n        <p>{description}</p>\n        <div className=\"buttons\">\n          <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\n          <StyledButton cyan onClick={onConfirm}>\n            {confirmText}\n          </StyledButton>\n        </div>\n      </AskModalBlock>\n    </Fullscreen>\n  );\n};\n\nexport default AskModal;","import React from 'react';\nimport AskModal from '../common/AskModal';\n\nconst AskRemoveModal = ({ visible, onConfirm, onCancel }) => {\n  return (\n    <AskModal\n      visible={visible}\n      title=\"포스트 삭제\"\n      description=\"포스트를 정말 삭제하시겠습니까?\"\n      confirmText=\"삭제\"\n      onConfirm={onConfirm}\n      onCancel={onCancel}\n    />\n  );\n};\n\nexport default AskRemoveModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport AskRemoveModal from './AskRemoveModal';\n\nconst PostActionButtonsBlock = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n  margin-top: -1.5rem;\n`;\n\nconst ActionButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  color: ${palette.gray[6]};\n  font-weight: bold;\n  border: none;\n  outline: none;\n  font-size: 0.875rem;\n  cursor: pointer;\n  &:hover {\n    background: ${palette.gray[1]};\n    color: ${palette.blue[7]};\n  }\n  & + & {\n    margin-left: 0.25rem;\n  }\n`;\n\nconst PostActionButtons = ({ onEdit, onRemove }) => {\n  const [modal, setModal] = useState(false);\n\n  const onRemoveClick = () => {\n    setModal(true);\n  };\n  const onCancel = () => {\n    setModal(false);\n  };\n  const onConfirm = () => {\n      setModal(false);\n      onRemove();\n  };\n\n  return (\n    <>\n      <PostActionButtonsBlock>\n        <ActionButton onClick={onEdit}>수정</ActionButton>\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\n      </PostActionButtonsBlock>\n      <AskRemoveModal visible={modal} onConfirm = {onConfirm} onCancel = {onCancel} />\n    </>\n  );\n};\n\nexport default PostActionButtons;\n","import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n    createRequestActionTypes\n  } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst INITIALIZE = 'level/INITIALIZE'; // 모든 내용 초기화\nconst UNLOAD_LEVEL = 'level/UNLOAD_LEVEL'; //레벨 비우기\nconst [\n    FIND_LEVEL,\n    FIND_LEVEL_SUCCESS,\n    FIND_LEVEL_FAILIRE,\n] = createRequestActionTypes('level/FIND_LEVEL'); //레벨 찾기\n\nexport const findLevel = createAction(FIND_LEVEL, ({ username }) => ({\n    username,\n}));\nexport const unloadLevel = createAction(UNLOAD_LEVEL);\n\nconst findLevelSaga = createRequestSaga(FIND_LEVEL, authAPI.findLevel);\n\nexport function* levelSaga(){\n    yield takeLatest(FIND_LEVEL, findLevelSaga);\n}\n\nconst initialState = {\n    levelInfo: null,\n    error: null,\n};\n\nconst level = handleActions(\n    {\n        [INITIALIZE]: state => initialState,\n        [FIND_LEVEL]: state=>({\n            ...state,\n            levelInfo: null,\n            error: null,\n        }),\n        [FIND_LEVEL_SUCCESS]: (state, { payload: levelInfo}) => ({\n            ...state,\n            levelInfo,\n        }),\n        [FIND_LEVEL_FAILIRE]: (state, { payload: error}) => ({\n            ...state,\n            error,\n        }),\n        [UNLOAD_LEVEL]: () => initialState,\n    },\n    initialState,\n);\n\nexport default level;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\nimport { setOriginalPost } from '../../modules/write';\nimport { removePost } from '../../lib/api/posts';\nimport { findLevel, unloadLevel } from '../../modules/level';\n\nconst PostViewerContainer = ({ match, history }) => {\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const { postId, username } = match.params;\n  const dispatch = useDispatch();\n  const { post, error, loading, user, levels } = useSelector(({ post, loading, user, level }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n    user: user.user,\n    levels: level.levelInfo,\n  }));\n\n  useEffect(() => {\n    dispatch(readPost(postId)); \n    dispatch(findLevel({username}));\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n    return () => {\n      dispatch(unloadPost());\n      dispatch(unloadLevel());\n    };\n  }, [dispatch, postId]);\n\n  const onEdit = () => {\n      dispatch(setOriginalPost(post));\n      history.push('/write');\n  };\n  \n  const onRemove = async () => {\n    try{\n      await removePost(postId);\n      history.push('/postlist');\n    }catch(e){\n      console.log(e);\n    }\n  };\n  const ownPost = (user && user._id) === (post && post.user._id);\n  return <PostViewer post={post} loading={loading} error={error} levels={levels} actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove} />} />;\n};\n\nexport default withRouter(PostViewerContainer);","\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport palette from '../../lib/style/palette';\n\n\nconst SubInfoBlock = styled.div`\n  ${props =>\n    props.hasMarginTop &&\n    css`\n      margin-top: 1rem;\n    `}\n  color: ${palette.gray[6]};\n  /* span 사이에 가운뎃점 문자 보여주기*/\n  span + span:before {\n    color: ${palette.gray[4]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7'; /* 가운뎃점 문자 */\n  }\n`;\nconst Div = styled.div`\n  padding-top: 1.5rem;\n  color: black;\n`;\n\nconst Comment = ({ username, text, publishedDate, hasMarginTop, usrlevel }) => {\n  \n    return (\n      <SubInfoBlock hasMarginTop={hasMarginTop}>\n        <span>\n          <b>\n            {username} \n            <span> {new Date(publishedDate).toLocaleDateString()}</span>\n          </b>\n          <Div>{text}</Div>\n        </span>\n      \n      </SubInfoBlock>\n    );\n  };\n  \n  export default Comment;\n  ","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Comment from '../common/Comment';\n\n\nconst PostItemBlock = styled.div`\n  margin-top:2rem;\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\nconst PostItem = ({ comments }) => {\n    const { text, user, publishedDate } = comments;\n    return (\n      <PostItemBlock>\n        <Comment\n          username ={user} \n          text={text}\n          publishedDate={new Date(publishedDate)}\n           />\n      </PostItemBlock>\n    );\n};\n\nconst ShowComments = ( { post } ) => {\n    const [arr, setArr] = useState([]);\n   \n    useEffect(()=> {\n      setArr(post.comments);\n    }, [post]);\n\n    return (\n      <div>\n        {arr&& arr.map(comments => (\n          <PostItem comments={comments} key={comments._id} />\n        ))}\n        {arr && !arr.length && <div style={{margin:'5% 0%', color:'black', fontSize:'1.2rem'}}>댓글이 없습니다.</div> } \n      </div>\n    );\n};\n\nexport default ShowComments;","import React, {useState, useEffect} from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { writeComment } from '../../modules/post';\nimport ShowComments from '../../components/comments/ShowComments';\nimport Button from '../../components/common/Button';\nimport styled from 'styled-components';\nimport Responsive from '../../components/common/Responsive';\nimport palette from '../../lib/style/palette';\n\nconst CoDiv = styled(Responsive)`\n    border-top: 1px solid ${palette.gray[2]};\n    margin-top : 5rem;\n    padding-bottom : 5rem;\n`;\nconst Comment = styled.div` \n    display: flex;\n    width : 100%;\n    justify-content: center;\n    align-items: center;\n`;\n\n\nconst Cbutton = styled(Button)`\n    padding: 0.25rem 0.5rem;\n    border-radius: 4px;\n    font-weight: bold;\n    border: none;\n    outline: none;\n    font-size: 1rem;\n    cursor: pointer;\n    background: ${palette.blue[7]};\n    color: white;\n    &:hover {\n        background: ${palette.blue[6]};\n        color: white;\n    }\n    & + & {\n        margin-left: 0.25rem;\n    }\n\n`;\nconst Input = styled.input`\n    width: 100%;\n    border: 1px solid #E8E6E6;\n    padding-left: .8em;\n    font-size: 1rem;\n    font-weight: bold;\n    &:focus{\n        outline:none;\n    }\n`;\nconst CommentContainer = ({ match }) => {\n    const [CommentValue, setCommentValue] = useState(\"\");\n    const [newPost, setNew] = useState({});\n    const [arrSize, setArr] = useState(0);\n    const {user, post} = useSelector(({ user, post }) => ({\n        user: user.user,\n        post: post.post,\n    }));\n    const dispatch = useDispatch();\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const username = user.username;\n        const _id = post._id;\n        dispatch(writeComment({text: CommentValue, username: username, id: _id}));\n        setCommentValue('');\n        \n    };\n    useEffect(() => {\n        if(post){    \n            setNew(post);\n            setArr(post.comments.length);\n        }\n    }, [post])\n    const handleChange = (e) => {\n        setCommentValue(e.currentTarget.value);\n    };\n\n    return(\n        <CoDiv>\n            <div style={{margin:'3% 0%', color:'black', fontSize:'1.2rem'}}>댓글 {arrSize}</div>\n            <div>\n            <Comment>\n                <form style={{ display: 'flex', width: '100%', height: '100px' }} onSubmit={onSubmit} >\n                <Input\n                    onChange={handleChange}\n                    value={CommentValue}\n                    placeholder=\"댓글을 작성하세요\"\n                />\n                <br />\n                </form>\n            </Comment>\n            <br/>\n            <Cbutton style={{float: 'right' }}onClick={onSubmit}>댓글 작성</Cbutton>\n            </div>\n           {newPost && <ShowComments post={newPost}/> }\n\n        </CoDiv>\n    )\n};  \nexport default withRouter(CommentContainer);\n","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport PostViewerContainer from '../containers/post/PostViewerContainer';\nimport CommentContainer from '../containers/comments/CommentContainer';\nimport { Helmet } from 'react-helmet-async';\nimport FooterContainer from '../containers/common/FooterContainer';\n\nconst PostPage = () => {\n    return(\n        <>\n        <Helmet>\n            <title>글 보기</title>\n        </Helmet>\n        <HeaderContainer />\n        <NavContainer />\n        <PostViewerContainer />\n        <CommentContainer />\n        <FooterContainer />\n        </>    \n    );\n};\n\nexport default PostPage;","import { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n\nimport './calendar.scss';\n\nconst MyCal = styled(Responsive)`\n  position : relative;\n  z-index: bottom;\n`;\n\nconst Spacer = styled.div`\n  height: 4rem;\n`;\n\nconst Spacer2 = styled.div`\n  height: 1rem;\n`;\n\nconst Calendar = () => {\n  const { user } = useSelector(({ user }) => ({\n    user: user.user\n  }));\n  //const events = [{ title: \"\", date: new Date()}];\n    return  (\n        <>\n        <Spacer />\n        <MyCal>\n            <FullCalendar\n            plugins={[ dayGridPlugin ]}\n            initialView = 'dayGridMonth'\n            events = {user.exercises}\n            dayMaxEvents = {true}\n            moreLinkClick = \"popover\"\n            contentHeight = \"800px\"\n            eventDisplay = 'block'\n            eventBackgroundColor = \"#1864ab\"\n            />\n        </MyCal>\n        <Spacer2 />\n        </>\n    );\n};\n\nexport default Calendar;","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport NavContainer from '../components/common/Navbar';\nimport CalendarContainer from '../components/exercises/Calendar';\nimport FooterContainer from '../containers/common/FooterContainer';\nimport { Helmet } from 'react-helmet-async';\n\nfunction calender() {\n    return (\n      <>\n        <Helmet>\n          <title>Calendar</title>  \n        </Helmet>\n        <HeaderContainer />\n        <NavContainer />\n        <CalendarContainer />\n        <FooterContainer />\n      </>\n    );\n  }\n  export default calender;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport PostListPage from './pages/PostListPage';\nimport WritePage from './pages/WritePage';\nimport MainPage from './pages/MainPage';\nimport TodayTr from './pages/TodayTr';\nimport './App.css';\nimport MyPage from './pages/MyPage';\nimport Modify from './pages/Modify';\nimport PostPage from './pages/PostPage';\nimport CalendarPage from './pages/CalendarPage';\nimport { Helmet } from 'react-helmet-async';\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <title>MAIT_메이트</title>\n      </Helmet>\n      <Route component={HomePage} path={['/@:username', '/']} exact />\n      <Route component={LoginPage} path=\"/login\" />\n      <Route component={RegisterPage} path=\"/register\" />\n      <Route component={PostListPage} path={['/postlist/@:username', '/postlist']}/>\n      <Route component={WritePage} path=\"/write\" />\n      <Route component={PostPage} path=\"/@:username/:postId\" />\n      <Route component={MainPage} path=\"/main\" />\n      <Route component={TodayTr} path=\"/todaytr\" />\n      <Route component={MyPage} path=\"/mypage\" />\n      <Route component={CalendarPage} path=\"/calendar\" />\n      <Route component={Modify} path=\"/modify/:id\" />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport auth, { authSaga } from './auth';\nimport loading from './loading';\nimport user, { userSaga } from './user';\nimport write, { writeSaga } from './write';\nimport post, { postSaga } from './post';\nimport posts, { postsSaga } from './posts';\nimport level, {levelSaga} from './level';\nimport exercise, {exerciseSaga} from './exercise';\n\nconst rootReducer = combineReducers({\n  auth,\n  loading,\n  user,\n  write,\n  post,\n  posts,\n  level,\n  exercise\n});\n\nexport function* rootSaga() {\n  yield all([authSaga(), userSaga(), writeSaga(), postSaga(), postsSaga(), levelSaga(), exerciseSaga()]);\n}\n\nexport default rootReducer;","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = () =>{\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\nexport default ScrollToTop;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport ScrollToTop from './components/common/ScrollToTop';\nimport { tempSetUser, check } from './modules/user';\nimport { HelmetProvider } from 'react-helmet-async';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer, \n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\n\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) {\n      return; // 로그인 상태가 아니라면 아무것도 안함\n    }\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n    <ScrollToTop />\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}